{"version":3,"sources":["store/middleware/logger.js","game/utils.js","game/flags.js","store/reducers/board.js","store/constants/actions.js","store/reducers/game.js","game/maths.js","store/actions/board.js","store/selectors/board.js","Tile.js","Board.js","Configuration.js","store/actions/game.js","App.js","index.js","store/configureStore.js"],"names":["logger","store","next","action","console","group","type","info","result","log","getState","groupEnd","genCharArray","charA","charZ","a","i","charCodeAt","j","push","String","fromCharCode","length","Error","concat","GOBAN_WIDTH_TO_HEIGHT_RATIO","Number","GOBAN_HEIGHT_TO_WIDTH_RATIO","GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO","CORNER_ALL_NW","CORNER_9_x_9_NE","CORNER_9_x_9_SE","CORNER_9_x_9_SW","CORNER_13_x_13_NE","CORNER_13_x_13_SE","CORNER_13_x_13_SW","CORNER_19_x_19_NE","CORNER_19_x_19_SE","CORNER_19_x_19_SW","CORNERS_9_x_9","STAR_POINTS_9_x_9","CORNERS_13_x_13","STAR_POINTS_13_x_13","CORNERS_19_x_19","STAR_POINTS_19_x_19","SIDES_9_x_9","Object","toConsumableArray","_","row","UTILS","col","SIDES_13_x_13","SIDES_19_x_19","GRID_COORDINATES_9_x_9","GRID_COORDINATES_13_x_13","GRID_COORDINATES_19_x_19","initialState","mode","koViolation","currentBoardState","previousBoardState","board","state","arguments","undefined","payload","objectSpread","nextBoardState","_action$payload","colCoordinate","rowCoordinate","canRender","turnColor","turnNumber","windowHeight","windowWidth","blackCaptures","whiteCaptures","game","getCardinalDirection","coordinate","FLAGS","substring","getCardinalAdjacencies","_ref3","coordinates","maxIndex","colIndex","parseInt","rowIndex","adjacencies","north","east","south","west","getAdjacentCoordinates","_ref4","setStone","dispatch","_getState$game","_getState$board","color","_ref5","existingStones","newStoneColor","newStoneColCoordinate","newStoneRowCoordinate","opposingColor","newStones","defineProperty","cardinalAdjacencyMap","nextAdjacentCoordinates","attackedGroups","stones","liberties","isCoordinateProcessed","direction","shouldProcessCoordinate","attackedGroup","coordinateToProcess","apply","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","aCoordinate","err","return","stonesToRemove","survivingAttackedGroups","GAME_MATHS","koWarning","updateStones","placedStoneSelector","createSelector","props","placedStoneAtCoordinate","Tile","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPreviewStone","bind","assertThisInitialized","clearCanvas","drawTile","onClick","onMouseOver","onMouseOut","isKoViolation","ctx","refs","canvas","getContext","lineWidth","strokeStyle","_this$props","stonePlaced","drawStone","includes","drawIntersection","drawStarPoint","drawSide","drawCorner","_this$props2","height","width","getCanvasContextPresets","cardinalDirection","midX","midY","beginPath","font","moveTo","lineTo","fillText","stroke","_this$props3","_this$props4","_this$props5","arc","Math","PI","fillStyle","fill","drawStoneInternal","isBlack","_this$props6","stoneRadius","_this$props7","clearRect","_this$props8","react_default","createElement","ref","Component","connect","ownProps","Board","aRow","tileDimensions","numberCoordinate","key","className","letterCoordinate","src_Tile","getCoordinates","id","renderRow","tileHeight","_state$game","boardDimensions","_ref","desiredWidth","desiredHeight","floor","_ref2","boardHeight","boardWidth","tileRatio","Configuration","setMode","getHumanReadableMode","onChange","e","target","App","updateWindowDimensions","window","addEventListener","removeEventListener","setWindowDimensions","innerWidth","innerHeight","src_Board","src_Configuration","preloadedState","enhancers","applyMiddleware","thunkMiddleware","loggerMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","boardReducer","gameReducer","createStore","configureStore","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"6NASeA,EATA,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC5BC,QAAQC,MAAMF,EAAOG,MACrBF,QAAQG,KAAK,cAAeJ,GAC5B,IAAIK,EAASN,EAAKC,GAGlB,OAFAC,QAAQK,IAAI,aAAcR,EAAMS,YAChCN,QAAQO,WACDH,2BCNEI,EAAe,SAACC,EAAOC,GAGhC,IAFA,IAAIC,EAAI,GAAIC,EAAIH,EAAMI,WAAW,GAAIC,EAAIJ,EAAMG,WAAW,GAEnDD,GAAKE,IAAKF,EACbD,EAAEI,KAAKC,OAAOC,aAAaL,IAG/B,GAAiB,IAAbD,EAAEO,OACF,MAAM,IAAIC,MAAJ,qBAAAC,OAA+BX,EAA/B,eAAAW,OAAkDV,EAAlD,iBAGV,OAAOC,GCJEU,EAA8BC,OAAO,mBACrCC,EAA8BD,OAAO,kBAGrCE,EAA4CF,OAAO,KAuCnDG,EAAa,GAAAL,OAjBA,KAiBAA,OAfH,KAiBVM,EAAe,GAAAN,OAfI,KAeJA,OAjBL,KAkBVO,EAAe,GAAAP,OAhBI,KAgBJA,OAdI,KAenBQ,EAAe,GAAAR,OArBF,KAqBEA,OAfI,KAiBnBS,EAAiB,GAAAT,OAfI,KAeJA,OArBP,KAsBVU,EAAiB,GAAAV,OAhBI,KAgBJA,OAdI,MAerBW,EAAiB,GAAAX,OAzBJ,KAyBIA,OAfI,MAiBrBY,EAAiB,GAAAZ,OAfI,KAeJA,OAzBP,KA0BVa,EAAiB,GAAAb,OAhBI,KAgBJA,OAdI,MAerBc,EAAiB,GAAAd,OA7BJ,KA6BIA,OAfI,MAiBrBe,EAAgB,CACzBV,EACAC,EACAC,EACAC,GAGSQ,EAAoB,CAC7B,KAAK,KAAK,KAAM,KAAM,MAGbC,EAAkB,IAAAjB,OA1CL,KA0CKA,OAxCR,KAwCQ,GAAAA,OA1CL,KA0CKA,OAhCG,MAgCH,GAAAA,OAlCG,KAkCHA,OAxCR,KAwCQ,GAAAA,OAlCG,KAkCHA,OAhCG,OAuCrBkB,EAAsB,CAC/B,KAAK,KAAK,KAAM,MAAO,OAGdC,EAAkB,IAAAnB,OArDL,KAqDKA,OAnDR,KAmDQ,GAAAA,OArDL,KAqDKA,OAvCG,MAuCH,GAAAA,OAzCG,KAyCHA,OAnDR,KAmDQ,GAAAA,OAzCG,KAyCHA,OAvCG,OA8CrBoB,EAAsB,CAC/B,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,MAAO,OAG5CC,EAAW,GAAArB,OAAAsB,OAAAC,EAAA,EAAAD,CACjBE,MAAMA,QAAQ,EAAG,GAAI,SAAAC,GAAG,SAAAzB,OAjEL,KAiEKA,OAAoByB,MAD3BH,OAAAC,EAAA,EAAAD,CAEjBE,MAAMA,QAAQ,EAAG,GAAI,SAAAC,GAAG,SAAAzB,OA9DC,KA8DDA,OAA0ByB,MAFjCH,OAAAC,EAAA,EAAAD,CAGjBE,MAAME,EAlEkB,IAI0B,KA8DoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,QAHxEL,OAAAC,EAAA,EAAAD,CAIjBE,MAAME,EAnEkB,IAI0B,KA+DoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,SAGnFC,EAAa,GAAA5B,OAAAsB,OAAAC,EAAA,EAAAD,CACnBE,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAAG,SAAAzB,OAxEN,KAwEMA,OAAoByB,MAD1BH,OAAAC,EAAA,EAAAD,CAEnBE,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAAG,SAAAzB,OAjEE,KAiEFA,OAA4ByB,MAFlCH,OAAAC,EAAA,EAAAD,CAGnBE,MAAME,EAzEkB,IAQ4B,KAiEoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,SAHxEL,OAAAC,EAAA,EAAAD,CAInBE,MAAME,EA1EkB,IAQ4B,KAkEoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,SAGrFE,EAAa,GAAA7B,OAAAsB,OAAAC,EAAA,EAAAD,CACnBE,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAAG,SAAAzB,OA/EN,KA+EMA,OAAoByB,MAD1BH,OAAAC,EAAA,EAAAD,CAEnBE,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAAG,SAAAzB,OApEE,KAoEFA,OAA4ByB,MAFlCH,OAAAC,EAAA,EAAAD,CAGnBE,MAAME,EAhFkB,IAY4B,KAoEoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,SAHxEL,OAAAC,EAAA,EAAAD,CAInBE,MAAME,EAjFkB,IAY4B,KAqEoC,SAAAC,GAAG,SAAA3B,OAAO2B,EAAP,SAGrFG,EACTN,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAClB,OAAOD,MAAME,EAvFK,IAIM,KAmFuC,SAAAC,GAAG,SAAA3B,OAAO2B,GAAP3B,OAAayB,OAI1EM,EACTP,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAClB,OAAOD,MAAME,EA7FK,IAQQ,KAqFuC,SAAAC,GAAG,SAAA3B,OAAO2B,GAAP3B,OAAayB,OAI5EO,EACTR,MAAMA,QAAQ,EAAG,IAAK,SAAAC,GAClB,OAAOD,MAAME,EAnGK,IAYQ,KAuFuC,SAAAC,GAAG,SAAA3B,OAAO2B,GAAP3B,OAAayB,OC9HnFQ,EAAe,CACjBC,KDasB,aCZtBC,YAAa,GACbC,kBAAmB,GACnBC,mBAAoB,IAoCTC,EAjCD,WAAkC,IAAjCC,EAAiCC,UAAA1C,OAAA,QAAA2C,IAAAD,UAAA,GAAAA,UAAA,GAAzBP,EAActD,EAAW6D,UAAA1C,OAAA,EAAA0C,UAAA,QAAAC,EAC5C,OAAQ9D,EAAOG,MACX,ICdgB,WDchB,IACYoD,EAASvD,EAAO+D,QAAhBR,KAER,OAAOZ,OAAAqB,EAAA,EAAArB,CAAA,GACAW,EADP,CAEIC,SAER,ICnBqB,gBDmBrB,IACYU,EAAmBjE,EAAO+D,QAA1BE,eAER,OAAOtB,OAAAqB,EAAA,EAAArB,CAAA,GACAiB,EADP,CAEIJ,YAAa,GACbC,kBAAmBQ,EACnBP,mBAAoBE,EAAMH,oBAElC,IC/BkB,aD+BlB,IAAAS,EAIQlE,EAAO+D,QAFPI,EAFRD,EAEQC,cACAC,EAHRF,EAGQE,cAGJ,OAAOzB,OAAAqB,EAAA,EAAArB,CAAA,GACAiB,EADP,CAEIJ,YAAW,GAAAnC,OAAK8C,GAAL9C,OAAqB+C,KAExC,QACI,OAAOR,IEvCbN,EAAe,CACjBe,WAAW,EACXd,KHesB,aGdtBe,UHOsB,aGNtBC,WAAY,EACZC,aAAc,KACdC,YAAa,KACbC,cAAe,EACfC,cAAe,GAqCJC,EAlCF,WAAkC,IAAjChB,EAAiCC,UAAA1C,OAAA,QAAA2C,IAAAD,UAAA,GAAAA,UAAA,GAAzBP,EAActD,EAAW6D,UAAA1C,OAAA,EAAA0C,UAAA,QAAAC,EAC3C,OAAQ9D,EAAOG,MACX,IDfgB,WCiBZ,OAAOwC,OAAAqB,EAAA,EAAArB,CAAA,GACAiB,EADP,CAEIL,KAAMvD,EAAO+D,QAAQR,KACrBgB,WAAY,EACZG,cAAe,EACfC,cAAe,IAEvB,IDtBqB,gBCuBjB,OAAOhC,OAAAqB,EAAA,EAAArB,CAAA,GACAiB,EADP,CAEIU,UHfU,eGeCV,EAAMU,UHdP,aADA,aGgBVC,WAAYX,EAAMW,WAAa,IAEvC,ID3B6B,wBC2B7B,IAAAL,EAIQlE,EAAO+D,QAFPS,EAFRN,EAEQM,aACAC,EAHRP,EAGQO,YAGJ,OAAO9B,OAAAqB,EAAA,EAAArB,CAAA,GACAiB,EADP,CAEIS,WAAW,EACXG,eACAC,gBAER,QACI,OAAOb,0DCXNiB,EAAuB,SAACtB,EAAMuB,GACvC,GAAIC,IAAwBD,EACxB,MJJkB,aIOtB,GJlBsB,eIkBGvB,EAAM,CAC3B,GAAIwB,IAA0BD,EAC1B,MJXc,aIYX,GAAIC,IAA0BD,EACjC,MJjBc,aIkBX,GAAIC,IAA0BD,EACjC,MJjBc,aImBd,GJbc,MIaWA,EAAW,GAChC,MJjBI,OIkBD,GJbI,MIakBA,EAAWE,UAAU,GAC9C,MJzBK,QI0BF,GJba,MIakBF,EAAW,GAC7C,MJzBI,OI0BD,GJba,MIaeA,EAAWE,UAAU,GACpD,MJzBK,QI6Bb,MAAM,IAAI5D,MAAM,mEAGpB,GJvCwB,iBIuCGmC,EAAM,CAC7B,GAAIwB,IAA4BD,EAC5B,MJjCc,aIkCX,GAAIC,IAA4BD,EACnC,MJvCc,aIwCX,GAAIC,IAA4BD,EACnC,MJvCc,aIyCd,GJnCc,MImCWA,EAAW,GAChC,MJvCI,OIwCD,GJnCI,MImCkBA,EAAWE,UAAU,GAC9C,MJ/CK,QIgDF,GJ/Be,MI+BkBF,EAAW,GAC/C,MJ/CI,OIgDD,GJ/Be,OI+BeA,EAAWE,UAAU,GACtD,MJ/CK,QImDb,MAAM,IAAI5D,MAAM,qEAGpB,GJ5DwB,iBI4DGmC,EAAM,CAC7B,GAAIwB,IAA4BD,EAC5B,MJvDc,aIwDX,GAAIC,IAA4BD,EACnC,MJ7Dc,aI8DX,GAAIC,IAA4BD,EACnC,MJ7Dc,aI+Dd,GJzDc,MIyDWA,EAAW,GAChC,MJ7DI,OI8DD,GJzDI,MIyDkBA,EAAWE,UAAU,GAC9C,MJrEK,QIsEF,GJjDe,MIiDkBF,EAAW,GAC/C,MJrEI,OIsED,GJjDe,OIiDeA,EAAWE,UAAU,GACtD,MJrEK,QIyEb,MAAM,IAAI5D,MAAM,uEAsDX6D,EAAyB,SAAAC,GAIhC,IACEC,EAJJ5B,EAGE2B,EAHF3B,KACAY,EAEEe,EAFFf,cACAC,EACEc,EADFd,cJ1IsB,eI8IGb,EACrB4B,EAAcJ,EJ9IM,iBI+IUxB,EAC9B4B,EAAcJ,EJ/IM,iBIgJUxB,IAC9B4B,EAAcJ,GAGlB,IAAMK,EAAWD,EAAYhE,OAAS,EAGhCkE,EAAWC,SAASnB,EAAcrD,WAAW,GAAK,IAClDyE,EAAWD,SAASlB,GAAiB,EAErCoB,EAAc,GAkBpB,OAhBID,GAAY,IACZC,EAAYC,MAAQN,EAAYI,EAAW,GAAGF,IAG9CA,EAAWD,IACXI,EAAYE,KAAOP,EAAYI,GAAUF,EAAW,IAGpDE,EAAWH,IACXI,EAAYG,MAAQR,EAAYI,EAAW,GAAGF,IAG9CA,GAAY,IACZG,EAAYI,KAAOT,EAAYI,GAAUF,EAAW,IAGjDG,GAGEK,GAAyB,SAAAC,GAAA,IACnCvC,EADmCuC,EACnCvC,KACAY,EAFmC2B,EAEnC3B,cACAC,EAHmC0B,EAGnC1B,cAHmC,OAIhCvB,SAASoC,EAAuB,CAClC1B,OACAY,gBACAC,oBCvLS2B,GAAW,SAAC5B,EAAeC,GACpC,OAAO,SAAC4B,EAAUzF,GAAa,IAAA0F,EAIvB1F,IAAWqE,KAFXrB,EAFuB0C,EAEvB1C,KACAe,EAHuB2B,EAGvB3B,UAHuB4B,EASvB3F,IAAWoD,MAFXF,EAPuByC,EAOvBzC,kBACAC,EARuBwC,EAQvBxC,mBAGEyC,ELpBY,eKoBiB7B,ELhBhB,cACA,cKiBbL,EDiLkB,SAAAmC,GAM1B,IALFC,EAKED,EALFC,eACA9C,EAIE6C,EAJF7C,KACA+C,EAGEF,EAHFE,cACAC,EAEEH,EAFFG,sBACAC,EACEJ,EADFI,sBAEMC,EJ1MiB,gBI0MqBH,EJzMrB,cADA,cI2MjBI,EAAY7D,SAAS,GAAIwD,EAAb1D,OAAAgE,EAAA,EAAAhE,CAAA,MAAAtB,OAAmCkF,GAAnClF,OAA2DmF,GAA0BF,IAGnGM,EAAuB3B,EAAuB,CAC9C1B,OACAY,cAAeoC,EACfnC,cAAeoC,IAGfK,EAA0B,GAGxBC,EAAiB,CACnBrB,MAAO,CACHsB,OAAQ,GACRC,UAAW,IAEftB,KAAM,CACFqB,OAAQ,GACRC,UAAW,IAEfrB,MAAO,CACHoB,OAAQ,GACRC,UAAW,IAEfpB,KAAM,CACFmB,OAAQ,GACRC,UAAW,KAIbC,EAAwB,SAACnC,GAC3B,IAAK,IAAMoC,KAAaJ,EACpB,GAAIjE,WAAWiE,EAAeI,GAAWH,OAAQjC,GAC7C,OAAO,EAIf,OAAO,GAGLqC,EAA0B,SAACrC,GAC7B,OAAImC,EAAsBnC,IAItB4B,EAAU5B,KAAgB2B,GAOlC,IAAK,IAAMS,KAAaN,EAAsB,CAC1C,IAAM9B,EAAa8B,EAAqBM,GAClCE,EAAgBN,EAAeI,GAGjCC,EAAwBrC,KACxB+B,EAAwB7F,KAAK8D,GAC7BsC,EAAcL,OAAO/F,KAAK8D,IAG9B,GAEI+B,EAA0BhE,UAAUgE,EAAyB,SAACQ,GAAD,OACzDxE,SAASgD,GAAuB,CAC5BtC,OACAY,cAAekD,EAAoB,GACnCjD,cAAeiD,EAAoBrC,UAAU,KAC7CmC,KAGRC,EAAcL,OAAO/F,KAAKsG,MAAMF,EAAcL,OAAQF,SACd,IAAnCA,EAAwB1F,QAGrC,IAAK,IAAM+F,KAAaJ,EAAgB,CACpC,IAAMM,EAAgBN,EAAeI,GADDK,GAAA,EAAAC,GAAA,EAAAC,OAAA3D,EAAA,IAGpC,QAAA4D,EAAAC,EAAkCP,EAAcL,OAAhDa,OAAAC,cAAAN,GAAAG,EAAAC,EAAA5H,QAAA+H,MAAAP,GAAA,EAAwD,KAA7CF,EAA6CK,EAAAK,MACpDlB,EAA0BhE,SAASgD,GAAuB,CACtDtC,OACAY,cAAekD,EAAoB,GACnCjD,cAAeiD,EAAoBrC,UAAU,KAC7C,SAAAgD,GAAW,OAAKf,EAAsBe,MACjCtB,EAAUsB,IJlSL,eIkSqBtB,EAAUsB,MAE7CZ,EAAcJ,UAAUhG,KAAKsG,MAAMF,EAAcJ,UAAWH,IAX5B,MAAAoB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAexC,IAAMU,EAAiB,GACnBC,EAA0B,EAE9B,IAAK,IAAMlB,KAAaJ,EAAgB,CACpC,IAAMM,EAAgBN,EAAeI,GAEE,IAAnCE,EAAcJ,UAAU7F,OACxBgH,EAAenH,KAAKsG,MAAMa,EAAgBf,EAAcL,QACjDK,EAAcL,OAAO5F,OAAS,GACrCiH,IAIR,OAAIA,IAA4BvF,OAAO+D,GAAsBzF,OAClDkF,EAGJxD,OAAO6D,EAAWyB,GCtSEE,CAA4B,CAC/ChC,eAAgB5C,EAChBF,OACA+C,cAAeH,EACfI,sBAAuBpC,EACvBqC,sBAAuBpC,IAMvB4B,EAHSnD,UAAUa,EAAoBO,GA/BjC,SAACE,EAAeC,EAAe+B,GAA/B,MAA0C,CACxDhG,KHbsB,aGctB4D,QAAS,CACLI,gBACAC,gBACA+B,UA6BamC,CAAUnE,EAAeC,EAAe+B,GAzCxC,SAAClC,GAAD,MAAqB,CACtC9D,KHHyB,gBGIzB4D,QAAS,CACLE,mBAwCasE,CAAatE,eC1CrBuE,GAAsBC,aAFH,SAAC7E,EAAO8E,GAAR,OAAkB9E,EAAMD,MAAMF,kBAAZ,GAAApC,OAAiCqH,EAAMvE,eAAvC9C,OAAuDqH,EAAMtE,iBAI3G,SAAAuE,GACI,OAAKA,GNOa,eORpBC,eACF,SAAAA,EAAYF,GAAO,IAAAG,EAAA,OAAAlG,OAAAmG,EAAA,EAAAnG,CAAAoG,KAAAH,IACfC,EAAAlG,OAAAqG,EAAA,EAAArG,CAAAoG,KAAApG,OAAAsG,EAAA,EAAAtG,CAAAiG,GAAAM,KAAAH,KAAML,KAEDS,iBAAmBN,EAAKM,iBAAiBC,KAAtBzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IACxBA,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IACnBA,EAAKU,SAAWV,EAAKU,SAASH,KAAdzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IAChBA,EAAKW,QAAUX,EAAKW,QAAQJ,KAAbzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IACfA,EAAKY,YAAcZ,EAAKY,YAAYL,KAAjBzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IACnBA,EAAKa,WAAab,EAAKa,WAAWN,KAAhBzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IARHA,mFAYfE,KAAKQ,wDAILR,KAAKQ,6DAGiB,IACdI,EAAkBZ,KAAKL,MAAvBiB,cAGFC,EADSb,KAAKc,KAAKC,OACNC,WAAW,MAO9B,OANAH,EAAII,UAAY,EAEZL,IACAC,EAAIK,YAAc,WAGfL,qCAGA,IAAAM,EAMHnB,KAAKL,MAJLnF,EAFG2G,EAEH3G,KACAa,EAHG8F,EAGH9F,cACAD,EAJG+F,EAIH/F,cP9Bc,eO0BX+F,EAKHC,YAMApB,KAAKO,cAELP,KAAKqB,aHpDiB,SAAC7G,GAC/B,MJgBsB,eIhBGA,EACdwB,EJgBa,iBIfUxB,EACvBwB,EJea,iBIdUxB,EACvBwB,OADJ,EGkDChC,CAAyBQ,GAAM8G,SAA/B,GAAAhJ,OAA2C8C,GAA3C9C,OAA2D+C,KH7CvC,SAACb,GAC7B,MJMsB,eINGA,EACdwB,EJMa,iBILUxB,EACvBwB,EJKa,iBIJUxB,EACvBwB,OADJ,EG0CQhC,CAAuBQ,GAAM8G,SAA7B,GAAAhJ,OAAyC8C,GAAzC9C,OAAyD+C,KHrCvC,SAACb,GAClC,MJJsB,eIIGA,EACdwB,EJJa,iBIKUxB,EACvBwB,EJLa,iBIMUxB,EACvBwB,OADJ,EGkCQhC,CAA4BQ,GAAM8G,SAAlC,GAAAhJ,OAA8C8C,GAA9C9C,OAA8D+C,IAGrE2E,KAAKuB,mBAFLvB,KAAKwB,gBAFLxB,KAAKyB,WAFLzB,KAAK0B,gDAUF,IAAAC,EAOH3B,KAAKL,MALLiC,EAFGD,EAEHC,OACApH,EAHGmH,EAGHnH,KACAqH,EAJGF,EAIHE,MACAxG,EALGsG,EAKHtG,cACAD,EANGuG,EAMHvG,cAGEyF,EAAMb,KAAK8B,0BAEXC,EAAoB/H,EAA2BQ,EAA3B,GAAAlC,OAAoC8C,GAApC9C,OAAoD+C,IAExE2G,EAAOH,EAAQ,EACfI,EAAOL,EAAS,EAEtBf,EAAIqB,YACJrB,EAAIsB,KAAO,iBPxDC,SO0DOJ,GACflB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAIuB,OAAOJ,EAAMC,GACjBpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIyB,SAASjH,EAAe,EAAG4G,EAAO,IPrE7B,UOsEcF,GACvBlB,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIuB,OAAOJ,EAAMC,GACjBpB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAIyB,SAASlH,EAAe4G,EAAM,KPzE1B,SO0EcD,GACtBlB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIyB,SAASjH,EAAewG,EAAQ,GAAII,EAAO,IP7EtC,UO8EcF,IACvBlB,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIyB,SAASlH,EAAe4G,EAAMJ,EAAS,KAG/Cf,EAAI0B,8CAGK,IAAAC,EAOLxC,KAAKL,MALLiC,EAFKY,EAELZ,OACApH,EAHKgI,EAGLhI,KACAqH,EAJKW,EAILX,MACAxG,EALKmH,EAKLnH,cACAD,EANKoH,EAMLpH,cAGEyF,EAAMb,KAAK8B,0BAEXC,EAAoB/H,EAA2BQ,EAA3B,GAAAlC,OAAoC8C,GAApC9C,OAAoD+C,IAExE2G,EAAOH,EAAQ,EACfI,EAAOL,EAAS,EAEtBf,EAAIqB,YACJrB,EAAIsB,KAAO,iBP7GO,eO+GOJ,GACrBlB,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAIyB,SAASlH,EAAe4G,EAAO,EAAG,IACtCnB,EAAIyB,SAASjH,EAAewG,EAAQ,GAAII,EAAO,IPlHjC,eOmHcF,GAC5BlB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIwB,OAAO,EAAGJ,GACdpB,EAAIyB,SAASlH,EAAe4G,EAAO,EAAGJ,EAAS,IAC/Cf,EAAIyB,SAASjH,EAAewG,EAAQ,GAAII,IPtH1B,eOuHcF,GAC5BlB,EAAIuB,OAAOP,EAAOI,GAClBpB,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIwB,OAAOL,EAAM,GACjBnB,EAAIyB,SAASlH,EAAe4G,EAAMJ,EAAS,IAC3Cf,EAAIyB,SAASjH,EAAe,EAAG4G,IP1HjB,eO2HcF,IAC5BlB,EAAIuB,OAAOJ,EAAMJ,GACjBf,EAAIwB,OAAOL,EAAMC,GACjBpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIyB,SAASlH,EAAe4G,EAAM,IAClCnB,EAAIyB,SAASjH,EAAe,EAAG4G,IAGnCpB,EAAI0B,oDAGW,IAAAE,EAIXzC,KAAKL,MAFLiC,EAFWa,EAEXb,OACAC,EAHWY,EAGXZ,MAGEhB,EAAMb,KAAK8B,0BAEXE,EAAOH,EAAQ,EACfI,EAAOL,EAAS,EAEtBf,EAAIqB,YACJrB,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAI0B,iDAGQ,IAAAG,EAIR1C,KAAKL,MAFLiC,EAFQc,EAERd,OACAC,EAHQa,EAGRb,MAGEhB,EAAMb,KAAK8B,0BAEXE,EAAOH,EAAQ,EACfI,EAAOL,EAAS,EAEtBf,EAAIqB,YACJrB,EAAI8B,IAAIX,EAAMC,EAAM,EAAG,EAAG,EAAIW,KAAKC,IACnChC,EAAIiC,UAAY,UAChBjC,EAAIkC,OACJlC,EAAIuB,OAAO,EAAGH,GACdpB,EAAIwB,OAAOR,EAAOI,GAClBpB,EAAIuB,OAAOJ,EAAM,GACjBnB,EAAIwB,OAAOL,EAAMJ,GACjBf,EAAI0B,6CAGI,IACAnB,EAAgBpB,KAAKL,MAArByB,YAERpB,KAAKgD,kBPhMc,gBOgM0B5B,6CAG/B6B,GAAS,IAAAC,EAKnBlD,KAAKL,MAHLiC,EAFmBsB,EAEnBtB,OACAuB,EAHmBD,EAGnBC,YACAtB,EAJmBqB,EAInBrB,MAIEhB,EADSb,KAAKc,KAAKC,OACNC,WAAW,MAExBgB,EAAOH,EAAQ,EACfI,EAAOL,EAAS,EAEtBf,EAAIqB,YACJrB,EAAI8B,IAAIX,EAAMC,EAAMkB,EAAa,EAAG,EAAIP,KAAKC,IAEzCI,IACApC,EAAIiC,UAAY,UAChBjC,EAAIkC,QAGRlC,EAAI0B,oDAGW,IACPhH,EAAcyE,KAAKL,MAAnBpE,UAERyE,KAAKgD,kBPlOa,eOkO0BzH,yCAGlC,IAAA6H,EAINpD,KAAKL,MAFLiC,EAFMwB,EAENxB,OACAC,EAHMuB,EAGNvB,MAGW7B,KAAKc,KAAKC,OACNC,WAAW,MAE1BqC,UAAU,EAAG,EAAGxB,EAAOD,yCP3OT,eO+OO5B,KAAKL,MAAMyB,aAChCpB,KAAKI,wDPhPS,eOqPOJ,KAAKL,MAAMyB,cAChCpB,KAAKO,cACLP,KAAKQ,8CPvPS,eO4POR,KAAKL,MAAMyB,aAChCpB,KAAKL,MAAM3C,4CAIV,IAAAsG,EAIDtD,KAAKL,MAFLiC,EAFC0B,EAED1B,OACAC,EAHCyB,EAGDzB,MAGJ,OACI0B,EAAA1L,EAAA2L,cAAA,UACI5B,OAAQA,EACRC,MAAOA,EACP4B,IAAI,SACJ/C,YAAaV,KAAKU,YAClBC,WAAYX,KAAKW,WACjBF,QAAST,KAAKS,iBAtRXiD,aA2TJC,eApBS,SAAC9I,EAAO+I,GAC5B,MAAO,CACHxC,YAAa3B,GAAoB5E,EAAO+I,GACxCrI,UAAWV,EAAMgB,KAAKN,YAIH,SAAC0B,EAAU2G,GAAa,IAE3CxI,EAEAwI,EAFAxI,cACAC,EACAuI,EADAvI,cAGJ,MAAO,CACH2B,SAAU,WACNC,EAASD,GAAS5B,EAAeC,OAK9BsI,CAGb9D,IC/TIgE,4LACe,IACLrJ,EAASwF,KAAKL,MAAdnF,KAGR,GRQkB,eQRdA,EACA,OAAOwB,EACJ,GROa,iBQPTxB,EACP,OAAOwB,EACJ,GRMa,iBQNTxB,EACP,OAAOwB,EAEP,MAAM,IAAI3D,MAAM,4DAIdyL,GAAM,IAAA3C,EAMRnB,KAAKL,MAJLlF,EAFQ0G,EAER1G,YACAD,EAHQ2G,EAGR3G,KACA2I,EAJQhC,EAIRgC,YACAY,EALQ5C,EAKR4C,eAGEC,EAAmBF,EAAK,GAAG7H,UAAU,GAE3C,OAAOsH,EAAA1L,EAAA2L,cAAA,OACHS,IAAG,GAAA3L,OAAKkC,GAALlC,OAAY0L,GACfE,UAAU,mBAETpK,MAAMgK,EAAM,SAAA7E,GACT,IAAMkF,EAAmBlF,EAAY,GAErC,OAAOsE,EAAA1L,EAAA2L,cAACY,GAAD,CACHxD,cAAenG,IAAgBwE,EAC/BgF,IAAG,GAAA3L,OAAKkC,GAALlC,OAAY6L,GAAZ7L,OAA+B0L,GAClC5I,cAAe+I,EACf9I,cAAe2I,EACfpC,OAAQmC,EAAenC,OACvBuB,YAAaA,EACbtB,MAAOkC,EAAelC,MACtBrH,KAAMA,wCAOb,IAAAsF,EAAAE,KACC5D,EAAc4D,KAAKqE,iBAEzB,OACId,EAAA1L,EAAA2L,cAAA,OAAKc,GAAG,SACHxK,MAAMsC,EAAa,SAAA0H,GAChB,OAAOhE,EAAKyE,UAAUT,aAtDtBJ,aA+FLC,eAlCS,SAAC9I,GAAU,IJmFP2J,EInFOC,EAK3B5J,EAAMgB,KAHNrB,EAF2BiK,EAE3BjK,KACAiB,EAH2BgJ,EAG3BhJ,aACAC,EAJ2B+I,EAI3B/I,YAIAjB,EACAI,EAAMD,MADNH,YAGEiK,EJ2B8B,SAAAC,GAGD,IAFFlJ,EAEEkJ,EAFFlJ,aACAC,EACEiJ,EADFjJ,YAE7BkJ,EAAenJ,EAAeO,EAE5B6I,GADND,EAAelJ,EAAckJ,EAAeA,EAAelJ,EAAc,IACpCM,EAErC,MAAO,CACH4F,OAAQgB,KAAKkC,MAAMD,GACnBhD,MAAOe,KAAKkC,MAAMF,IIpClBtF,CAAoC,CAChC7D,eACAC,gBAGFqI,EJsC6B,SAAAgB,GAIA,IAHFvK,EAGEuK,EAHFvK,KACAwK,EAEED,EAFFC,YACAC,EACEF,EADFE,WAE7BC,EAAY,EAEhB,GJ9GsB,eI8GG1K,EACrB0K,EAAY1M,OAAO,EAAE,QAClB,GJ/GiB,iBI+GUgC,EAC9B0K,EAAY1M,OAAO,EAAE,QAClB,IJhHiB,iBIgHUgC,EAG9B,MAAM,IAAInC,MAAM,iBAFhB6M,EAAY1M,OAAO,EAAE,IAKzB,IAAMoJ,EAASgB,KAAKkC,MAAME,EAAcE,GAClCrD,EAAQe,KAAKkC,MAAMG,EAAaC,GAItC,MAAO,CACHtD,OAAQA,EAAS,IAAM,EAAIA,EAASA,EAAS,EAC7CC,MAAOA,EAAQ,IAAM,EAAIA,EAAQA,EAAQ,GI7DzCvC,CAAmC,CAC/B9E,OACAwK,YAAaN,EAAgB9C,OAC7BqD,WAAYP,EAAgB7C,QAKpC,MAAO,CACHpH,cACAD,OACA2I,aJsDoBqB,EI3DmBT,EAAenC,OJ4DnDgB,KAAKkC,MAAON,EAAaxI,EAAmD,IItD/E+H,mBAIOJ,CAAyBE,IC/FlCsB,kMACqB,IACX3K,EAASwF,KAAKL,MAAdnF,KAER,GTSkB,eSTdA,EACA,MAAO,QACJ,GTQa,iBSRTA,EACP,MAAO,UACJ,GTOa,iBSPTA,EACP,MAAO,UAEP,MAAM,IAAInC,MAAM,2DAIf,IAAA8I,EAIDnB,KAAKL,MAFLnF,EAFC2G,EAED3G,KACA4K,EAHCjE,EAGDiE,QAGJ,OACI7B,EAAA1L,EAAA2L,cAAA,OAAKc,GAAG,iBACJf,EAAA1L,EAAA2L,cAAA,2BACAD,EAAA1L,EAAA2L,cAAA,OAAKU,UAAU,kBACXX,EAAA1L,EAAA2L,cAAA,WACID,EAAA1L,EAAA2L,cAAA,mBAAWxD,KAAKqF,wBAChB9B,EAAA1L,EAAA2L,cAAA,0BAAkBxD,KAAKL,MAAMnE,aAEjC+H,EAAA1L,EAAA2L,cAAA,YACID,EAAA1L,EAAA2L,cAAA,UACI8B,SAAU,SAAAC,GAAC,OAAIH,EAAQG,EAAEC,OAAOxG,QAChCA,MAAOxE,GAEP+I,EAAA1L,EAAA2L,cAAA,UAAQxE,MTrBV,cSqBE,SACAuE,EAAA1L,EAAA2L,cAAA,UAAQxE,MTrBR,gBSqBA,WACAuE,EAAA1L,EAAA2L,cAAA,UAAQxE,MTrBR,gBSqBA,sBApCA0E,aA0DbC,eAbS,SAAC9I,GACrB,MAAO,CACHL,KAAMK,EAAMgB,KAAKrB,KACjBgB,WAAYX,EAAMgB,KAAKL,aAIJ,SAAAyB,GAAQ,MAAK,CACpCmI,QAAS,SAAC5K,GACNyC,EC3De,SAAAzC,GAAI,MAAK,CAC5BpD,KRFoB,WQGpB4D,QAAS,CACLR,SDwDS4K,CAAQ5K,OAIVmJ,CAGbwB,IE7DIM,sBAEF,SAAAA,EAAY9F,GAAO,IAAAG,EAAA,OAAAlG,OAAAmG,EAAA,EAAAnG,CAAAoG,KAAAyF,IACf3F,EAAAlG,OAAAqG,EAAA,EAAArG,CAAAoG,KAAApG,OAAAsG,EAAA,EAAAtG,CAAA6L,GAAAtF,KAAAH,KAAML,KACD+F,uBAAyB5F,EAAK4F,uBAAuBrF,KAA5BzG,OAAA0G,EAAA,EAAA1G,CAAAkG,IAFfA,mFAMfE,KAAK0F,yBACLC,OAAOC,iBAAiB,SAAU5F,KAAK0F,uEAIvCC,OAAOE,oBAAoB,SAAU7F,KAAK0F,yEAI1C1F,KAAKL,MAAMmG,oBAAoBH,OAAOI,WAAYJ,OAAOK,8CAGpD,IACG1K,EAAc0E,KAAKL,MAAnBrE,UAER,OACIiI,EAAA1L,EAAA2L,cAAA,OAAKU,UAAU,qBACXX,EAAA1L,EAAA2L,cAAA,OAAKU,UAAU,mBACV5I,GAAaiI,EAAA1L,EAAA2L,cAACyC,GAAD,OACZ3K,GAAaiI,EAAA1L,EAAA2L,cAAA,6BAEnBD,EAAA1L,EAAA2L,cAAA,OAAKU,UAAU,2BACXX,EAAA1L,EAAA2L,cAAC0C,GAAD,eA9BFxC,cAuDHC,eAlBS,SAAC9I,GAAU,IAAA4J,EAI3B5J,EAAMgB,KAFNP,EAF2BmJ,EAE3BnJ,UAIJ,MAAO,CACHd,KAP2BiK,EAG3BjK,KAKAc,cAImB,SAAA2B,GAAQ,MAAK,CACpC6I,oBAAqB,SAACpK,EAAaD,GAC/BwB,ED1C2B,SAACvB,EAAaD,GAAd,MAAgC,CAC/DrE,KRbiC,wBQcjC4D,QAAS,CACLU,cACAD,iBCsCSqK,CAAoBpK,EAAaD,OAInCkI,CAGb8B,ICtDI1O,GCHS,SAAwBoP,GACnC,IAEMC,EAAY,CAFSC,0BAAgBC,IAAiBC,IAGtDC,EAAoBC,sBAAmBlI,WAAnB,EAAuB6H,GAE3CM,EAAcC,0BAAgB,CAChC/L,MAAOgM,EACP/K,KAAMgL,IAGV,OAAOC,sBAAYJ,EAAaP,EAAgBK,GDRtCO,GACRC,GAAcC,SAASC,eAAe,QAE5CC,IAASC,OACL7D,EAAA1L,EAAA2L,cAAC6D,EAAA,EAAD,CAAUtQ,MAAOA,IACbwM,EAAA1L,EAAA2L,cAAC8D,GAAD,OAEJN","file":"static/js/main.8d53ebe1.chunk.js","sourcesContent":["const logger = store => next => action => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    let result = next(action);\n    console.log('next state', store.getState());\n    console.groupEnd();\n    return result;\n};\n\nexport default logger;","export const genCharArray = (charA, charZ) => {\n    let a = [], i = charA.charCodeAt(0), j = charZ.charCodeAt(0);\n\n    for (; i <= j; ++i) {\n        a.push(String.fromCharCode(i));\n    }\n\n    if (a.length === 0) {\n        throw new Error(`Unexpected begin [${charA}] and end [${charZ}] characters`);\n    }\n\n    return a;\n};","import * as _ from 'lodash';\nimport * as UTILS from './utils';\n\n// yeehaw constants and pointers and strings oh my\n\n// Ratios expertly calculated from here\n//https://senseis.xmp.net/?EquipmentDimensions\nexport const GOBAN_WIDTH_TO_HEIGHT_RATIO = Number(1.071428571428571);\nexport const GOBAN_HEIGHT_TO_WIDTH_RATIO = Number(0.933333333333333);\n\n// I made this up\nexport const GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO = Number(0.88);\n\nexport const TURN_BLACK = 'TURN_BLACK';\nexport const TURN_WHITE = 'TURN_WHITE';\n\nexport const STONE_NONE = 'STONE_NONE';\nexport const STONE_BLACK = 'STONE_BLACK';\nexport const STONE_WHITE = 'STONE_WHITE';\n\nexport const GAME_9_x_9 = 'GAME_9_x_9';\nexport const GAME_13_x_13 = 'GAME_13_x_13';\nexport const GAME_19_x_19 = 'GAME_19_x_19';\n\nexport const NORTH = 'NORTH';\nexport const NORTH_EAST = 'NORTH_EAST';\nexport const EAST = 'EAST';\nexport const SOUTH_EAST = 'SOUTH_EAST';\nexport const SOUTH = 'SOUTH';\nexport const SOUTH_WEST = 'SOUTH_WEST';\nexport const WEST = 'WEST';\nexport const NORTH_WEST = 'NORTH_WEST';\n\nexport const MIN_COLUMN = 'a';\nexport const MIN_SIDE_COLUMN = 'b';\nexport const MIN_ROW = '1';\n\nexport const MAX_9_x_9_COLUMN = 'i';\nexport const MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH = 'h';\nexport const MAX_9_x_9_ROW    = '9';\n\nexport const MAX_13_x_13_COLUMN = 'm';\nexport const MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH = 'l';\nexport const MAX_13_x_13_ROW    = '13';\n\nexport const MAX_19_x_19_COLUMN = 's';\nexport const MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH = 'r';\nexport const MAX_19_x_19_ROW    = '19';\n\n// it's always a1 doofus\nexport const CORNER_ALL_NW = `${MIN_COLUMN}${MIN_ROW}`;\n\nexport const CORNER_9_x_9_NE = `${MAX_9_x_9_COLUMN}${MIN_ROW}`;\nexport const CORNER_9_x_9_SE = `${MAX_9_x_9_COLUMN}${MAX_9_x_9_ROW}`;\nexport const CORNER_9_x_9_SW = `${MIN_COLUMN}${MAX_9_x_9_ROW}`;\n\nexport const CORNER_13_x_13_NE = `${MAX_13_x_13_COLUMN}${MIN_ROW}`;\nexport const CORNER_13_x_13_SE = `${MAX_13_x_13_COLUMN}${MAX_13_x_13_ROW}`;\nexport const CORNER_13_x_13_SW = `${MIN_COLUMN}${MAX_13_x_13_ROW}`;\n\nexport const CORNER_19_x_19_NE = `${MAX_19_x_19_COLUMN}${MIN_ROW}`;\nexport const CORNER_19_x_19_SE = `${MAX_19_x_19_COLUMN}${MAX_19_x_19_ROW}`;\nexport const CORNER_19_x_19_SW = `${MIN_COLUMN}${MAX_19_x_19_ROW}`;\n\nexport const CORNERS_9_x_9 = [\n    CORNER_ALL_NW,\n    CORNER_9_x_9_NE,\n    CORNER_9_x_9_SE,\n    CORNER_9_x_9_SW,\n];\n\nexport const STAR_POINTS_9_x_9 = [\n    'c3','g3','e5', 'c7', 'g7',\n];\n\nexport const CORNERS_13_x_13 = [\n    `${MIN_COLUMN}${MIN_ROW}`,\n    `${MIN_COLUMN}${MAX_13_x_13_ROW}`,\n    `${MAX_13_x_13_COLUMN}${MIN_ROW}`,\n    `${MAX_13_x_13_COLUMN}${MAX_13_x_13_ROW}`,\n];\n\nexport const STAR_POINTS_13_x_13 = [\n    'd4','j4','g7', 'j10', 'd10',\n];\n\nexport const CORNERS_19_x_19 = [\n    `${MIN_COLUMN}${MIN_ROW}`,\n    `${MIN_COLUMN}${MAX_19_x_19_ROW}`,\n    `${MAX_19_x_19_COLUMN}${MIN_ROW}`,\n    `${MAX_19_x_19_COLUMN}${MAX_19_x_19_ROW}`,\n];\n\nexport const STAR_POINTS_19_x_19 = [\n    'd4', 'd10', 'd16', 'j4', 'j10', 'j16', 'p4', 'p10', 'p16',\n];\n\nexport const SIDES_9_x_9 = [\n    ..._.map(_.range(2, 9), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 9), row => `${MAX_9_x_9_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH), col => `${col}9`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const SIDES_13_x_13 = [\n    ..._.map(_.range(2, 13), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 13), row => `${MAX_13_x_13_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH), col => `${col}13`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const SIDES_19_x_19 = [\n    ..._.map(_.range(2, 19), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 19), row => `${MAX_19_x_19_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH), col => `${col}19`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const GRID_COORDINATES_9_x_9 =\n    _.map(_.range(1, 10), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_9_x_9_COLUMN), col => `${col}${row}`);\n    })\n;\n\nexport const GRID_COORDINATES_13_x_13 =\n    _.map(_.range(1, 14), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_13_x_13_COLUMN), col => `${col}${row}`);\n    })\n;\n\nexport const GRID_COORDINATES_19_x_19 =\n    _.map(_.range(1, 20), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_19_x_19_COLUMN), col => `${col}${row}`);\n    })\n;","import * as FLAGS from '../../game/flags';\nimport * as ACTIONS from '../constants/actions';\n\n// This maintains a map of coordinates as keys to placed stones.\n// the state is somewhat dynamic but predictable based on the\n// generally agreed upon goban coordinates\nconst initialState = {\n    mode: FLAGS.GAME_9_x_9,\n    koViolation: '',\n    currentBoardState: {},\n    previousBoardState: {},\n};\n\nconst board = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_MODE:\n            const { mode } = action.payload;\n\n            return {\n                ...initialState,\n                mode,\n            };\n        case ACTIONS.UPDATE_STONES:\n            const { nextBoardState } = action.payload;\n\n            return {\n                ...state,\n                koViolation: '',\n                currentBoardState: nextBoardState,\n                previousBoardState: state.currentBoardState,\n            };\n        case ACTIONS.KO_WARNING:\n            const {\n                colCoordinate,\n                rowCoordinate,\n            } = action.payload;\n\n            return {\n                ...state,\n                koViolation: `${colCoordinate}${rowCoordinate}`,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default board;","export const KO_WARNING = 'KO_WARNING';\nexport const SET_MODE = 'SET_MODE';\nexport const SET_TURN_NUMBER = 'SET_TURN_NUMBER';\nexport const UPDATE_STONES = 'UPDATE_STONES';\nexport const SET_WINDOW_DIMENSIONS = 'SET_WINDOW_DIMENSIONS';","import * as FLAGS from '../../game/flags';\nimport * as ACTIONS from '../constants/actions';\n\nconst initialState = {\n    canRender: false,\n    mode: FLAGS.GAME_9_x_9,\n    turnColor: FLAGS.TURN_BLACK,\n    turnNumber: 1,\n    windowHeight: null,\n    windowWidth: null,\n    blackCaptures: 0,\n    whiteCaptures: 0,\n};\n\nconst game = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_MODE:\n            // Maybe there's an argument for returning a spread operator'd initialState\n            return {\n                ...state,\n                mode: action.payload.mode,\n                turnNumber: 1,\n                blackCaptures: 0,\n                whiteCaptures: 0,\n            };\n        case ACTIONS.UPDATE_STONES:\n            return {\n                ...state,\n                turnColor: state.turnColor === FLAGS.TURN_BLACK ? FLAGS.TURN_WHITE : FLAGS.TURN_BLACK,\n                turnNumber: state.turnNumber + 1,\n            };\n        case ACTIONS.SET_WINDOW_DIMENSIONS:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action.payload;\n\n            return {\n                ...state,\n                canRender: true,\n                windowHeight,\n                windowWidth,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default game;","import * as _ from 'lodash';\nimport * as FLAGS from './flags';\n\nexport const getCornersConstant = (mode) => {\n    if (FLAGS.GAME_9_x_9 === mode) {\n        return FLAGS.CORNERS_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        return FLAGS.CORNERS_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        return FLAGS.CORNERS_19_x_19;\n    }\n};\n\nexport const getSidesConstant = (mode) => {\n    if (FLAGS.GAME_9_x_9 === mode) {\n        return FLAGS.SIDES_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        return FLAGS.SIDES_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        return FLAGS.SIDES_19_x_19;\n    }\n};\n\nexport const getStarPointsConstant = (mode) => {\n    if (FLAGS.GAME_9_x_9 === mode) {\n        return FLAGS.STAR_POINTS_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        return FLAGS.STAR_POINTS_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        return FLAGS.STAR_POINTS_19_x_19;\n    }\n};\n\nexport const getCardinalDirection = (mode, coordinate) => {\n    if (FLAGS.CORNER_ALL_NW === coordinate) {\n        return FLAGS.NORTH_WEST;\n    } \n    \n    if (FLAGS.GAME_9_x_9 === mode) {\n        if (FLAGS.CORNER_9_x_9_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_9_x_9_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_9_x_9_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_9_x_9_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_9_x_9_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 9 x 9');\n    }\n\n    if (FLAGS.GAME_13_x_13 === mode) {\n        if (FLAGS.CORNER_13_x_13_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_13_x_13_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_13_x_13_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_13_x_13_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_13_x_13_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 13 x 13');\n    }\n\n    if (FLAGS.GAME_19_x_19 === mode) {\n        if (FLAGS.CORNER_19_x_19_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_19_x_19_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_19_x_19_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_19_x_19_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_19_x_19_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 19 x 19');\n    }    \n};\n\n// Calculates how much space the board can have on the screen\nexport const calculateBoardDimensions = ({\n                                     windowHeight,\n                                     windowWidth,\n                                 }) => {\n    let desiredWidth = windowHeight * FLAGS.GOBAN_HEIGHT_TO_WIDTH_RATIO;\n    desiredWidth = windowWidth > desiredWidth ? desiredWidth : windowWidth - 10; // very scientific\n    const desiredHeight = desiredWidth * FLAGS.GOBAN_WIDTH_TO_HEIGHT_RATIO;\n\n    return {\n        height: Math.floor(desiredHeight),\n        width: Math.floor(desiredWidth),\n    };\n};\n\n//https://senseis.xmp.net/?EquipmentDimensions\n// This function determines the width and height of each renderable tile.\n// corners and sides will get an additional padding for aesthetic.\nexport const calculateTileDimensions = ({\n                                     mode,\n                                     boardHeight,\n                                     boardWidth,\n                                 }) => {\n    let tileRatio = 0;\n\n    if (FLAGS.GAME_9_x_9 === mode) {\n        tileRatio = Number(1/9);\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        tileRatio = Number(1/13);\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        tileRatio = Number(1/19);\n    } else {\n        throw new Error('No known mode');\n    }\n    \n    const height = Math.floor(boardHeight * tileRatio);\n    const width = Math.floor(boardWidth * tileRatio);\n\n    // Otherwise these calculations will cause lines to be drawn outside\n    // the bounding canvas\n    return {\n        height: height % 2 === 0 ? height : height - 1,\n        width: width % 2 === 0 ? width : width - 1,\n    };\n};\n\nexport const stoneRadius = (tileHeight) => {\n    return Math.floor((tileHeight * FLAGS.GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO) / 2);\n};\n\nexport const getCardinalAdjacencies = ({\n    mode,\n    colCoordinate,\n    rowCoordinate,\n}) => {\n    let coordinates;\n\n    if (FLAGS.GAME_9_x_9 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_19_x_19;\n    }\n\n    const maxIndex = coordinates.length - 1;\n\n    // 'a' is ASCII 97\n    const colIndex = parseInt(colCoordinate.charCodeAt(0) - 97);\n    const rowIndex = parseInt(rowCoordinate) - 1; // 0 indexed, dummy\n\n    const adjacencies = {};\n\n    if (rowIndex >= 1) {\n        adjacencies.north = coordinates[rowIndex - 1][colIndex];\n    }\n\n    if (colIndex < maxIndex) {\n        adjacencies.east = coordinates[rowIndex][colIndex + 1];\n    }\n\n    if (rowIndex < maxIndex) {\n        adjacencies.south = coordinates[rowIndex + 1][colIndex];\n    }\n\n    if (colIndex >= 1) {\n        adjacencies.west = coordinates[rowIndex][colIndex - 1];\n    }\n\n    return adjacencies;\n};\n\nexport const getAdjacentCoordinates = ({\n   mode,\n   colCoordinate,\n   rowCoordinate,\n}) => _.values(getCardinalAdjacencies({\n    mode,\n    colCoordinate,\n    rowCoordinate,\n}));\n\n// get adjacent stones of opposing color\n// get all connected stones in that opposing color group\n// determine if any of those connected stones have any liberties\n// return board state with dead groups removed\n\nexport const removeDeadStones = ({\n    existingStones,\n    mode,\n    newStoneColor,\n    newStoneColCoordinate,\n    newStoneRowCoordinate,\n}) => {\n    const opposingColor = FLAGS.STONE_BLACK === newStoneColor ? FLAGS.STONE_WHITE : FLAGS.STONE_BLACK;\n    const newStones = _.assign({}, existingStones, { [`${newStoneColCoordinate}${newStoneRowCoordinate}`]: newStoneColor });\n\n    // this will make sense in a few lines.. maybe\n    let cardinalAdjacencyMap = getCardinalAdjacencies({\n        mode,\n        colCoordinate: newStoneColCoordinate,\n        rowCoordinate: newStoneRowCoordinate,\n    });\n\n    let nextAdjacentCoordinates = [];\n\n    // Need to track the attacked groups separately to ensure proper removal\n    const attackedGroups = {\n        north: {\n            stones: [],\n            liberties: [],\n        },\n        east: {\n            stones: [],\n            liberties: [],\n        },\n        south: {\n            stones: [],\n            liberties: [],\n        },\n        west: {\n            stones: [],\n            liberties: [],\n        },\n    };\n\n    const isCoordinateProcessed = (coordinate) => {\n        for (const direction in attackedGroups) {\n            if (_.includes(attackedGroups[direction].stones, coordinate)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    const shouldProcessCoordinate = (coordinate) => {\n        if (isCoordinateProcessed(coordinate)) {\n            return false;\n        }\n\n        if (newStones[coordinate] === opposingColor) {\n            return true;\n        }\n\n        return false;\n    };\n\n    for (const direction in cardinalAdjacencyMap) {\n        const coordinate = cardinalAdjacencyMap[direction];\n        const attackedGroup = attackedGroups[direction];\n\n        // For a while I forgot to process the initial coordinate. Smart.\n        if (shouldProcessCoordinate(coordinate)) {\n            nextAdjacentCoordinates.push(coordinate);\n            attackedGroup.stones.push(coordinate);\n        }\n\n        do {\n            // ... get adjacent allied stones and ones not already part of the group\n            nextAdjacentCoordinates = _.flatMap(nextAdjacentCoordinates, (coordinateToProcess) =>\n                _.filter(getAdjacentCoordinates({\n                    mode,\n                    colCoordinate: coordinateToProcess[0],\n                    rowCoordinate: coordinateToProcess.substring(1),\n                }), shouldProcessCoordinate)\n            );\n\n            attackedGroup.stones.push.apply(attackedGroup.stones, nextAdjacentCoordinates);\n        } while (nextAdjacentCoordinates.length !== 0);\n    }\n\n    for (const direction in attackedGroups) {\n        const attackedGroup = attackedGroups[direction];\n\n        for (const coordinateToProcess of attackedGroup.stones) {\n            nextAdjacentCoordinates = _.filter(getAdjacentCoordinates({\n                mode,\n                colCoordinate: coordinateToProcess[0],\n                rowCoordinate: coordinateToProcess.substring(1),\n            }), aCoordinate => !isCoordinateProcessed(aCoordinate)\n                && (!newStones[aCoordinate] || newStones[aCoordinate] === FLAGS.STONE_NONE));\n\n            attackedGroup.liberties.push.apply(attackedGroup.liberties, nextAdjacentCoordinates);\n        }\n    }\n\n    const stonesToRemove = [];\n    let survivingAttackedGroups = 0;\n\n    for (const direction in attackedGroups) {\n        const attackedGroup = attackedGroups[direction];\n\n        if (attackedGroup.liberties.length === 0) {\n            stonesToRemove.push.apply(stonesToRemove, attackedGroup.stones);\n        } else if (attackedGroup.stones.length > 0) {\n            survivingAttackedGroups++;\n        }\n    }\n\n    if (survivingAttackedGroups === _.keys(cardinalAdjacencyMap).length) {\n        return existingStones; // the placed stone died\n    }\n\n    return _.omit(newStones, stonesToRemove);\n};","import * as TYPES from '../constants/actions';\nimport * as FLAGS from '../../game/flags';\nimport * as GAME_MATHS from '../../game/maths';\nimport * as _ from 'lodash';\n\nconst updateStones = (nextBoardState) => ({\n    type: TYPES.UPDATE_STONES,\n    payload: {\n        nextBoardState,\n    },\n});\n\nconst koWarning = (colCoordinate, rowCoordinate, color) => ({\n    type: TYPES.KO_WARNING,\n    payload: {\n        colCoordinate,\n        rowCoordinate,\n        color,\n    }\n});\n\nexport const setStone = (colCoordinate, rowCoordinate) => {\n    return (dispatch, getState) => {\n        const {\n            mode,\n            turnColor,\n        } = getState().game;\n\n        const {\n            currentBoardState,\n            previousBoardState,\n        } = getState().board;\n\n        const color = FLAGS.TURN_BLACK === turnColor ? FLAGS.STONE_BLACK : FLAGS.STONE_WHITE;\n\n        const nextBoardState = GAME_MATHS.removeDeadStones({\n            existingStones: currentBoardState,\n            mode,\n            newStoneColor: color,\n            newStoneColCoordinate: colCoordinate,\n            newStoneRowCoordinate: rowCoordinate,\n        });\n\n        const isKo = _.isEqual(previousBoardState, nextBoardState);\n\n        if (isKo) {\n            dispatch(koWarning(colCoordinate, rowCoordinate, color));\n        } else {\n            dispatch(updateStones(nextBoardState));\n        }\n    };\n};","import { createSelector } from 'reselect';\nimport * as FLAGS from '../../game/flags';\n\n// This may have been pointless\nconst boardCoordinateSelector = (state, props) => state.board.currentBoardState[`${props.colCoordinate}${props.rowCoordinate}`];\n\nexport const placedStoneSelector = createSelector(\n    boardCoordinateSelector,\n    placedStoneAtCoordinate => {\n        if (!placedStoneAtCoordinate) {\n            return FLAGS.STONE_NONE;\n        }\n\n        return placedStoneAtCoordinate;\n    }\n);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as UTILS from './game/maths';\nimport * as FLAGS from './game/flags';\nimport { setStone } from './store/actions/board';\nimport { placedStoneSelector } from './store/selectors/board';\nimport { connect } from 'react-redux';\n\nclass Tile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.showPreviewStone = this.showPreviewStone.bind(this);\n        this.clearCanvas = this.clearCanvas.bind(this);\n        this.drawTile = this.drawTile.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n    }\n\n    componentDidMount() {\n        this.drawTile();\n    }\n\n    componentDidUpdate() {\n        this.drawTile();\n    }\n\n    getCanvasContextPresets() {\n        const { isKoViolation } = this.props;\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n        ctx.lineWidth = 4; // 4 pixels is a little over a millimeter. Yeah I know mobile yada yada\n\n        if (isKoViolation) {\n            ctx.strokeStyle = '#FF0000';\n        }\n\n        return ctx;\n    }\n\n    drawTile() {\n        const {\n            mode,\n            rowCoordinate,\n            colCoordinate,\n            stonePlaced,\n        } = this.props;\n\n        // Render the stone first, that way we can clear appropriately\n        // when the component is updated.\n        if (FLAGS.STONE_NONE === stonePlaced) {\n            this.clearCanvas();\n        } else {\n            this.drawStone();\n        }\n\n        if (UTILS.getCornersConstant(mode).includes(`${colCoordinate}${rowCoordinate}`)) {\n            this.drawCorner();\n        } else if (UTILS.getSidesConstant(mode).includes(`${colCoordinate}${rowCoordinate}`)) {\n            this.drawSide();\n        } else if (UTILS.getStarPointsConstant(mode).includes(`${colCoordinate}${rowCoordinate}`)) {\n            this.drawStarPoint();\n        } else {\n            this.drawIntersection();\n        }\n    }\n\n    drawSide() {\n        const {\n            height,\n            mode,\n            width,\n            rowCoordinate,\n            colCoordinate,\n        } = this.props;\n\n        const ctx = this.getCanvasContextPresets();\n\n        const cardinalDirection = UTILS.getCardinalDirection(mode, `${colCoordinate}${rowCoordinate}`);\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.font = '18px monospace';\n\n        if (FLAGS.WEST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, height);\n            ctx.moveTo(midX, midY);\n            ctx.lineTo(width, midY);\n            ctx.fillText(rowCoordinate, 0, midY + 4);\n        } else if (FLAGS.NORTH === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(width, midY);\n            ctx.moveTo(midX, midY);\n            ctx.lineTo(midX, height);\n            ctx.fillText(colCoordinate, midX, 18);\n        } else if (FLAGS.EAST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, height);\n            ctx.moveTo(0, midY);\n            ctx.lineTo(midX, midY);\n            ctx.fillText(rowCoordinate, width - 20, midY + 4);\n        } else if (FLAGS.SOUTH === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(width, midY);\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, midY);\n            ctx.fillText(colCoordinate, midX, height - 10);\n        }\n\n        ctx.stroke();\n    }\n\n    drawCorner() {\n        const {\n            height,\n            mode,\n            width,\n            rowCoordinate,\n            colCoordinate,\n        } = this.props;\n\n        const ctx = this.getCanvasContextPresets();\n\n        const cardinalDirection = UTILS.getCardinalDirection(mode, `${colCoordinate}${rowCoordinate}`);\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.font = '18px monospace';\n\n        if (FLAGS.NORTH_EAST === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(midX, height);\n            ctx.fillText(colCoordinate, midX - 4, 18);\n            ctx.fillText(rowCoordinate, width - 20, midY + 4);\n        } else if (FLAGS.SOUTH_EAST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(0, midY);\n            ctx.fillText(colCoordinate, midX - 4, height - 10);\n            ctx.fillText(rowCoordinate, width - 20, midY);\n        } else if (FLAGS.SOUTH_WEST === cardinalDirection) {\n            ctx.moveTo(width, midY);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(midX, 0);\n            ctx.fillText(colCoordinate, midX, height - 10);\n            ctx.fillText(rowCoordinate, 0, midY);\n        } else if (FLAGS.NORTH_WEST === cardinalDirection) {\n            ctx.moveTo(midX, height);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(width, midY);\n            ctx.fillText(colCoordinate, midX, 18);\n            ctx.fillText(rowCoordinate, 0, midY);\n        }\n\n        ctx.stroke();        \n    }\n    \n    drawIntersection() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        const ctx = this.getCanvasContextPresets();\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, midY);\n        ctx.lineTo(width, midY);\n        ctx.moveTo(midX, 0);\n        ctx.lineTo(midX, height);\n        ctx.stroke();\n    }\n\n    drawStarPoint() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        const ctx = this.getCanvasContextPresets();\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.arc(midX, midY, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = '#000000';\n        ctx.fill();\n        ctx.moveTo(0, midY);\n        ctx.lineTo(width, midY);\n        ctx.moveTo(midX, 0);\n        ctx.lineTo(midX, height);\n        ctx.stroke();\n    }\n\n    drawStone() {\n        const { stonePlaced } = this.props;\n\n        this.drawStoneInternal(FLAGS.STONE_BLACK === stonePlaced);\n    }\n\n    drawStoneInternal(isBlack) {\n        const {\n            height,\n            stoneRadius,\n            width,\n        } = this.props;\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.arc(midX, midY, stoneRadius, 0, 2 * Math.PI);\n\n        if (isBlack) {\n            ctx.fillStyle = '#000000';\n            ctx.fill();\n        }\n\n        ctx.stroke();\n    }\n\n    showPreviewStone() {\n        const { turnColor } = this.props;\n\n        this.drawStoneInternal(FLAGS.TURN_BLACK === turnColor);\n    }\n\n    clearCanvas() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    onMouseOver() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.showPreviewStone();\n        }\n    }\n\n    onMouseOut() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.clearCanvas();\n            this.drawTile();\n        }\n    }\n\n    onClick() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.props.setStone();\n        }\n    }\n\n    render() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        return (\n            <canvas\n                height={height}\n                width={width}\n                ref=\"canvas\"\n                onMouseOver={this.onMouseOver}\n                onMouseOut={this.onMouseOut}\n                onClick={this.onClick}\n            />\n        );\n    }\n}\n\nTile.propTypes = {\n    rowCoordinate: PropTypes.string.isRequired,\n    colCoordinate: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    stoneRadius: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    mode: PropTypes.string.isRequired,\n    stonePlaced: PropTypes.string.isRequired,\n    turnColor: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stonePlaced: placedStoneSelector(state, ownProps),\n        turnColor: state.game.turnColor,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const {\n        colCoordinate,\n        rowCoordinate,\n    } = ownProps;\n\n    return {\n        setStone: () => {\n            dispatch(setStone(colCoordinate, rowCoordinate));\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Tile);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash';\nimport * as FLAGS from './game/flags';\nimport * as GAME_MATHS from './game/maths';\nimport Tile from './Tile';\n\nclass Board extends Component {\n    getCoordinates() {\n        const { mode } = this.props;\n\n        // Yay hardcoding\n        if (mode === FLAGS.GAME_9_x_9) {\n            return FLAGS.GRID_COORDINATES_9_x_9;\n        } else if (mode === FLAGS.GAME_13_x_13) {\n            return FLAGS.GRID_COORDINATES_13_x_13;\n        } else if (mode === FLAGS.GAME_19_x_19) {\n            return FLAGS.GRID_COORDINATES_19_x_19;\n        } else {\n            throw new Error('No known mode selected');\n        }\n    }\n\n    renderRow(aRow) {\n        const {\n            koViolation,\n            mode,\n            stoneRadius,\n            tileDimensions,\n        } = this.props;\n\n        const numberCoordinate = aRow[0].substring(1);\n\n        return <div\n            key={`${mode}${numberCoordinate}`}\n            className=\"tiles-container\"\n        >\n            {_.map(aRow, aCoordinate => {\n                const letterCoordinate = aCoordinate[0];\n\n                return <Tile\n                    isKoViolation={koViolation === aCoordinate}\n                    key={`${mode}${letterCoordinate}${numberCoordinate}`}\n                    colCoordinate={letterCoordinate}\n                    rowCoordinate={numberCoordinate}\n                    height={tileDimensions.height}\n                    stoneRadius={stoneRadius}\n                    width={tileDimensions.width}\n                    mode={mode}\n                />;\n            })}\n        </div>;\n    }\n\n    // I may have reversed this? https://senseis.xmp.net/?Coordinates\n    render() {\n        const coordinates = this.getCoordinates();\n\n        return (\n            <div id=\"board\">\n                {_.map(coordinates, aRow => {\n                    return this.renderRow(aRow);\n                })}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        mode,\n        windowHeight,\n        windowWidth,\n    } = state.game;\n\n    const {\n        koViolation,\n    } = state.board;\n\n    const boardDimensions =\n        GAME_MATHS.calculateBoardDimensions({\n            windowHeight,\n            windowWidth,\n        });\n\n    const tileDimensions =\n        GAME_MATHS.calculateTileDimensions({\n            mode,\n            boardHeight: boardDimensions.height,\n            boardWidth: boardDimensions.width,\n        });\n\n    const stoneRadius = GAME_MATHS.stoneRadius(tileDimensions.height);\n\n    return {\n        koViolation,\n        mode,\n        stoneRadius,\n        tileDimensions,\n    };\n};\n\nexport default connect(mapStateToProps)(Board);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as FLAGS from './game/flags';\nimport {\n    setMode,\n} from './store/actions/game';\n\nclass Configuration extends Component {\n    getHumanReadableMode() {\n        const { mode } = this.props;\n\n        if (mode === FLAGS.GAME_9_x_9) {\n            return '9 x 9';\n        } else if (mode === FLAGS.GAME_13_x_13) {\n            return '13 x 13';\n        } else if (mode === FLAGS.GAME_19_x_19) {\n            return '19 x 19';\n        } else {\n            throw new Error('No known mode selected');\n        }\n    }\n\n    render() {\n        const {\n            mode,\n            setMode,\n        } = this.props;\n\n        return (\n            <div id=\"configuration\">\n                <h1>Go Demo Board</h1>\n                <div className=\"flex-container\">\n                    <div>\n                        <h4>Mode: {this.getHumanReadableMode()}</h4>\n                        <h4>Turn Number: {this.props.turnNumber}</h4>\n                    </div>\n                    <form>\n                        <select\n                            onChange={e => setMode(e.target.value)}\n                            value={mode}\n                        >\n                            <option value={FLAGS.GAME_9_x_9}>9 x 9</option>\n                            <option value={FLAGS.GAME_13_x_13}>13 x 13</option>\n                            <option value={FLAGS.GAME_19_x_19}>19 x 19</option>\n                        </select>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        mode: state.game.mode,\n        turnNumber: state.game.turnNumber,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setMode: (mode) => {\n        dispatch(setMode(mode))\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Configuration);","import * as TYPES from '../constants/actions';\n\nexport const setMode = mode => ({\n    type: TYPES.SET_MODE,\n    payload: {\n        mode,\n    },\n});\n\nexport const setTurnNumber = turnNumber => ({\n    type: TYPES.SET_TURN_NUMBER,\n    payload: {\n        turnNumber,\n    },\n});\n\nexport const setWindowDimensions = (windowWidth, windowHeight) => ({\n    type: TYPES.SET_WINDOW_DIMENSIONS,\n    payload: {\n        windowWidth,\n        windowHeight,\n    },\n});","import React, { Component } from 'react';\nimport Board from './Board';\nimport Configuration from './Configuration';\nimport { connect } from 'react-redux';\nimport { setWindowDimensions } from './store/actions/game';\nimport './styles/index.css';\n\nclass App extends Component {\n    // Always seems like garbage when .bind() is used\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.props.setWindowDimensions(window.innerWidth, window.innerHeight);\n    }\n\n    render() {\n        const { canRender } = this.props;\n\n        return (\n            <div className=\"App app-container\">\n                <div className=\"board-container\">\n                    {canRender && <Board/>}\n                    {!canRender && <h1>Please wait...</h1>}\n                </div>\n                <div className=\"configuration-container\">\n                    <Configuration/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        canRender,\n        mode,\n    } = state.game;\n\n    return {\n        mode,\n        canRender,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setWindowDimensions: (windowWidth, windowHeight) => {\n        dispatch(setWindowDimensions(windowWidth, windowHeight))\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux boilerplate\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\n\n// More potentially specific imports to this domain\nimport App from './App';\n\n\nconst store = configureStore();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport loggerMiddleware from './middleware/logger';\nimport boardReducer from './reducers/board';\nimport gameReducer from './reducers/game';\n\nexport default function configureStore(preloadedState) {\n    const middlewareEnhancer = applyMiddleware(thunkMiddleware, loggerMiddleware);\n\n    const enhancers = [middlewareEnhancer];\n    const composedEnhancers = composeWithDevTools(...enhancers);\n\n    const rootReducer = combineReducers({\n        board: boardReducer,\n        game: gameReducer,\n    });\n\n    return createStore(rootReducer, preloadedState, composedEnhancers);\n}"],"sourceRoot":""}