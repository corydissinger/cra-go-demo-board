{"version":3,"sources":["store/middleware/logger.js","game/utils.js","game/flags.js","game/maths.js","store/reducers/board.js","store/constants/actions.js","store/reducers/game.js","store/selectors/board.js","Tile.js","store/actions/board.js","Board.js","Configuration.js","store/actions/game.js","App.js","index.js","store/configureStore.js"],"names":["logger","store","next","action","console","group","type","info","result","log","getState","groupEnd","genCharArray","charA","charZ","a","i","charCodeAt","j","push","String","fromCharCode","length","Error","concat","GOBAN_WIDTH_TO_HEIGHT_RATIO","Number","GOBAN_HEIGHT_TO_WIDTH_RATIO","GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO","CORNER_ALL_NW","CORNER_9_x_9_NE","CORNER_9_x_9_SE","CORNER_9_x_9_SW","CORNER_13_x_13_NE","CORNER_13_x_13_SE","CORNER_13_x_13_SW","CORNER_19_x_19_NE","CORNER_19_x_19_SE","CORNER_19_x_19_SW","CORNERS_9_x_9","CORNERS_13_x_13","CORNERS_19_x_19","SIDES_9_x_9","Object","toConsumableArray","_","row","UTILS","col","SIDES_13_x_13","SIDES_19_x_19","GRID_COORDINATES_9_x_9","GRID_COORDINATES_13_x_13","GRID_COORDINATES_19_x_19","getCardinalDirection","mode","coordinate","FLAGS","substring","getAdjacentCoordinates","_ref4","colCoordinate","rowCoordinate","_ref3","coordinates","maxIndex","colIndex","parseInt","rowIndex","adjacencies","north","east","south","west","getCardinalAdjacencies","initialState","board","state","arguments","undefined","payload","objectSpread","_action$payload","color","nextBoardState","_ref5","existingStones","newStoneColor","newStoneColCoordinate","newStoneRowCoordinate","opposingColor","newStones","defineProperty","nextAdjacentCoordinates","aCoordinate","opposingStoneGroup","apply","coordinateToProcess","libertiesForGroup","_i","_opposingStoneGroup","GAME_MATHS","canRender","turnColor","turnNumber","windowHeight","windowWidth","configurationHeight","blackCaptures","whiteCaptures","game","placedStoneSelector","createSelector","props","placedStoneAtCoordinate","Tile","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPreviewStone","bind","assertThisInitialized","clearCanvas","drawTile","onClick","onMouseOver","onMouseOut","_this$props","stonePlaced","drawStone","includes","drawIntersection","drawSide","drawCorner","_this$props2","height","width","ctx","refs","canvas","getContext","cardinalDirection","midX","midY","beginPath","font","moveTo","lineTo","fillText","stroke","_this$props3","_this$props4","drawStoneInternal","isBlack","_this$props5","stoneRadius","arc","Math","PI","fillStyle","fill","_this$props6","clearRect","setStone","_this$props7","react_default","createElement","ref","Component","connect","ownProps","dispatch","setStoneInternal","Board","aRow","tileDimensions","numberCoordinate","key","className","letterCoordinate","src_Tile","getCoordinates","id","renderRow","tileHeight","_state$game","boardDimensions","_ref","desiredWidth","desiredHeight","floor","_ref2","boardHeight","boardWidth","tileRatio","JSON","stringify","Configuration","setConfigurationHeight","document","getElementById","clientHeight","setMode","getHumanReadableMode","onChange","e","target","value","App","updateWindowDimensions","window","addEventListener","removeEventListener","setWindowDimensions","innerWidth","innerHeight","src_Configuration","src_Board","preloadedState","enhancers","applyMiddleware","thunkMiddleware","loggerMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","boardReducer","gameReducer","createStore","configureStore","rootElement","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.df7c394c.chunk.js","sourcesContent":["const logger = store => next => action => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    let result = next(action);\n    console.log('next state', store.getState());\n    console.groupEnd();\n    return result;\n};\n\nexport default logger;","export const genCharArray = (charA, charZ) => {\n    let a = [], i = charA.charCodeAt(0), j = charZ.charCodeAt(0);\n\n    for (; i <= j; ++i) {\n        a.push(String.fromCharCode(i));\n    }\n\n    if (a.length === 0) {\n        throw new Error(`Unexpected begin [${charA}] and end [${charZ}] characters`);\n    }\n\n    return a;\n};","import * as _ from 'lodash';\nimport * as UTILS from './utils';\n\n// yeehaw constants and pointers and strings oh my\n\n// Ratios expertly calculated from here\n//https://senseis.xmp.net/?EquipmentDimensions\nexport const GOBAN_WIDTH_TO_HEIGHT_RATIO = Number(1.071428571428571);\nexport const GOBAN_HEIGHT_TO_WIDTH_RATIO = Number(0.933333333333333);\nexport const GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO = Number(0.949367088607595);\n\nexport const TURN_BLACK = 'TURN_BLACK';\nexport const TURN_WHITE = 'TURN_WHITE';\n\nexport const STONE_NONE = 'STONE_NONE';\nexport const STONE_BLACK = 'STONE_BLACK';\nexport const STONE_WHITE = 'STONE_WHITE';\n\nexport const GAME_9_x_9 = 'GAME_9_x_9';\nexport const GAME_13_x_13 = 'GAME_13_x_13';\nexport const GAME_19_x_19 = 'GAME_19_x_19';\n\nexport const NORTH = 'NORTH';\nexport const NORTH_EAST = 'NORTH_EAST';\nexport const EAST = 'EAST';\nexport const SOUTH_EAST = 'SOUTH_EAST';\nexport const SOUTH = 'SOUTH';\nexport const SOUTH_WEST = 'SOUTH_WEST';\nexport const WEST = 'WEST';\nexport const NORTH_WEST = 'NORTH_WEST';\n\nexport const MIN_COLUMN = 'a';\nexport const MIN_SIDE_COLUMN = 'b';\nexport const MIN_ROW = '1';\n\nexport const MAX_9_x_9_COLUMN = 'i';\nexport const MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH = 'h';\nexport const MAX_9_x_9_ROW    = '9';\n\nexport const MAX_13_x_13_COLUMN = 'm';\nexport const MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH = 'l';\nexport const MAX_13_x_13_ROW    = '13';\n\nexport const MAX_19_x_19_COLUMN = 's';\nexport const MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH = 'r';\nexport const MAX_19_x_19_ROW    = '19';\n\n// it's always a1 doofus\nexport const CORNER_ALL_NW = `${MIN_COLUMN}${MIN_ROW}`;\n\nexport const CORNER_9_x_9_NE = `${MAX_9_x_9_COLUMN}${MIN_ROW}`;\nexport const CORNER_9_x_9_SE = `${MAX_9_x_9_COLUMN}${MAX_9_x_9_ROW}`;\nexport const CORNER_9_x_9_SW = `${MIN_COLUMN}${MAX_9_x_9_ROW}`;\n\nexport const CORNER_13_x_13_NE = `${MAX_13_x_13_COLUMN}${MIN_ROW}`;\nexport const CORNER_13_x_13_SE = `${MAX_13_x_13_COLUMN}${MAX_13_x_13_ROW}`;\nexport const CORNER_13_x_13_SW = `${MIN_COLUMN}${MAX_13_x_13_ROW}`;\n\nexport const CORNER_19_x_19_NE = `${MAX_19_x_19_COLUMN}${MIN_ROW}`;\nexport const CORNER_19_x_19_SE = `${MAX_19_x_19_COLUMN}${MAX_19_x_19_ROW}`;\nexport const CORNER_19_x_19_SW = `${MIN_COLUMN}${MAX_19_x_19_ROW}`;\n\nexport const CORNERS_9_x_9 = [\n    CORNER_ALL_NW,\n    CORNER_9_x_9_NE,\n    CORNER_9_x_9_SE,\n    CORNER_9_x_9_SW,\n];\n\nexport const CORNERS_13_x_13 = [\n    `${MIN_COLUMN}${MIN_ROW}`,\n    `${MIN_COLUMN}${MAX_13_x_13_ROW}`,\n    `${MAX_13_x_13_COLUMN}${MIN_ROW}`,\n    `${MAX_13_x_13_COLUMN}${MAX_13_x_13_ROW}`,\n];\n\nexport const CORNERS_19_x_19 = [\n    `${MIN_COLUMN}${MIN_ROW}`,\n    `${MIN_COLUMN}${MAX_19_x_19_ROW}`,\n    `${MAX_19_x_19_COLUMN}${MIN_ROW}`,\n    `${MAX_19_x_19_COLUMN}${MAX_19_x_19_ROW}`,\n];\n\nexport const SIDES_9_x_9 = [\n    ..._.map(_.range(2, 9), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 9), row => `${MAX_9_x_9_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH), col => `${col}9`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_9_x_9_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const SIDES_13_x_13 = [\n    ..._.map(_.range(2, 13), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 13), row => `${MAX_13_x_13_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH), col => `${col}13`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_13_x_13_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const SIDES_19_x_19 = [\n    ..._.map(_.range(2, 19), row => `${MIN_COLUMN}${row}`),\n    ..._.map(_.range(2, 19), row => `${MAX_19_x_19_COLUMN}${row}`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH), col => `${col}19`),\n    ..._.map(UTILS.genCharArray(MIN_SIDE_COLUMN, MAX_EASTWARD_19_x_19_COLUMN_FOR_NORTH_SOUTH), col => `${col}1`),\n];\n\nexport const GRID_COORDINATES_9_x_9 =\n    _.map(_.range(1, 10), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_9_x_9_COLUMN), col => `${col}${row}`);\n    })\n;\n\nexport const GRID_COORDINATES_13_x_13 =\n    _.map(_.range(1, 14), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_13_x_13_COLUMN), col => `${col}${row}`);\n    })\n;\n\nexport const GRID_COORDINATES_19_x_19 =\n    _.map(_.range(1, 20), row => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_19_x_19_COLUMN), col => `${col}${row}`);\n    })\n;\n\n// Probably a better way to do this?\nexport const GRID_EMPTY_9_x_9 =\n    _.map(_.range(1, 10), () => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_9_x_9_COLUMN), () => STONE_NONE);\n    })\n;\n\nexport const GRID_EMPTY_13_x_13 =\n    _.map(_.range(1, 14), () => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_13_x_13_COLUMN), () => STONE_NONE);\n    })\n;\n\nexport const GRID_EMPTY_19_x_19 =\n    _.map(_.range(1, 20), () => {\n        return _.map(UTILS.genCharArray(MIN_COLUMN, MAX_19_x_19_COLUMN), () => STONE_NONE);\n    })\n;","import * as _ from 'lodash';\nimport * as FLAGS from './flags';\n\nexport const getCornersConstant = (mode) => {\n    if (FLAGS.GAME_9_x_9 === mode) {\n        return FLAGS.CORNERS_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        return FLAGS.CORNERS_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        return FLAGS.CORNERS_19_x_19;\n    }\n};\n\nexport const getSidesConstant = (mode) => {\n    if (FLAGS.GAME_9_x_9 === mode) {\n        return FLAGS.SIDES_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        return FLAGS.SIDES_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        return FLAGS.SIDES_19_x_19;\n    }\n};\n\n// TODO: Might not need this?\n// export const getEmptyBoardConstant = (mode) => {\n//     if (FLAGS.GAME_9_x_9 === mode) {\n//         return FLAGS.GRID_EMPTY_9_x_9;\n//     } else if (FLAGS.GAME_13_x_13 === mode) {\n//         return FLAGS.GRID_EMPTY_13_x_13;\n//     } else if (FLAGS.GAME_19_x_19 === mode) {\n//         return FLAGS.GRID_EMPTY_19_x_19;\n//     }\n// };\n\nexport const getCardinalDirection = (mode, coordinate) => {\n    if (FLAGS.CORNER_ALL_NW === coordinate) {\n        return FLAGS.NORTH_WEST;\n    } \n    \n    if (FLAGS.GAME_9_x_9 === mode) {\n        if (FLAGS.CORNER_9_x_9_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_9_x_9_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_9_x_9_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_9_x_9_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_9_x_9_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 9 x 9');\n    }\n\n    if (FLAGS.GAME_13_x_13 === mode) {\n        if (FLAGS.CORNER_13_x_13_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_13_x_13_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_13_x_13_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_13_x_13_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_13_x_13_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 13 x 13');\n    }\n\n    if (FLAGS.GAME_19_x_19 === mode) {\n        if (FLAGS.CORNER_19_x_19_SW === coordinate) {\n            return FLAGS.SOUTH_WEST;\n        } else if (FLAGS.CORNER_19_x_19_NE === coordinate) {\n            return FLAGS.NORTH_EAST;\n        } else if (FLAGS.CORNER_19_x_19_SE === coordinate) {\n            return FLAGS.SOUTH_EAST;\n        } else { // let me die I made these so cumbersome\n            if (FLAGS.MIN_COLUMN === coordinate[0]) {\n                return FLAGS.WEST;\n            } else if (FLAGS.MIN_ROW === coordinate.substring(1)) {\n                return FLAGS.NORTH;\n            } else if (FLAGS.MAX_19_x_19_COLUMN === coordinate[0]) {\n                return FLAGS.EAST;\n            } else if (FLAGS.MAX_19_x_19_ROW === coordinate.substring(1)) {\n                return FLAGS.SOUTH;\n            }\n        }\n\n        throw new Error('Avast ye matey, shouldn\"nt be branching to this island in 19 x 19');\n    }    \n};\n\n// Calculates how much space the board can have on the screen\nexport const calculateBoardDimensions = ({\n                                     configurationHeight,\n                                     windowHeight,\n                                     windowWidth,\n                                 }) => {\n    const workingHeight = windowHeight - configurationHeight;\n    let desiredWidth = workingHeight * FLAGS.GOBAN_HEIGHT_TO_WIDTH_RATIO;\n    desiredWidth = windowWidth > desiredWidth ? desiredWidth : windowWidth - 10; // very scientific\n    const desiredHeight = desiredWidth * FLAGS.GOBAN_WIDTH_TO_HEIGHT_RATIO;\n\n    return {\n        height: Math.floor(desiredHeight),\n        width: Math.floor(desiredWidth),\n    };\n};\n\n//https://senseis.xmp.net/?EquipmentDimensions\n// This function determines the width and height of each renderable tile.\n// corners and sides will get an additional padding for aesthetic.\nexport const calculateTileDimensions = ({\n                                     mode,\n                                     boardHeight,\n                                     boardWidth,\n                                 }) => {\n    let tileRatio = 0;\n\n    if (FLAGS.GAME_9_x_9 === mode) {\n        tileRatio = Number(1/9);\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        tileRatio = Number(1/13);\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        tileRatio = Number(1/19);\n    } else {\n        throw new Error('No known mode');\n    }\n    \n    const height = Math.floor(boardHeight * tileRatio);\n    const width = Math.floor(boardWidth * tileRatio);\n\n    // Otherwise these calculations will cause lines to be drawn outside\n    // the bounding canvas\n    return {\n        height: height % 2 === 0 ? height : height - 1,\n        width: width % 2 === 0 ? width : width - 1,\n    };\n};\n\nexport const stoneRadius = (tileHeight) => {\n    return Math.floor((tileHeight * FLAGS.GOBAN_STONE_DIAMETER_TO_TILE_HEIGHT_RATIO) / 2);\n};\n\nexport const getCardinalAdjacencies = ({\n    mode,\n    colCoordinate,\n    rowCoordinate,\n}) => {\n    let coordinates;\n\n    if (FLAGS.GAME_9_x_9 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_9_x_9;\n    } else if (FLAGS.GAME_13_x_13 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_13_x_13;\n    } else if (FLAGS.GAME_19_x_19 === mode) {\n        coordinates = FLAGS.GRID_COORDINATES_19_x_19;\n    }\n\n    const maxIndex = coordinates.length - 1;\n\n    // 'a' is ASCII 97\n    const colIndex = parseInt(colCoordinate.charCodeAt(0) - 97);\n    const rowIndex = parseInt(rowCoordinate) - 1; // 0 indexed, dummy\n\n    const adjacencies = {};\n\n    if (rowIndex >= 1) {\n        adjacencies.north = coordinates[rowIndex - 1][colIndex];\n    }\n\n    if (colIndex < maxIndex) {\n        adjacencies.east = coordinates[rowIndex][colIndex + 1];\n    }\n\n    if (rowIndex < maxIndex) {\n        adjacencies.south = coordinates[rowIndex + 1][colIndex];\n    }\n\n    if (colIndex >= 1) {\n        adjacencies.west = coordinates[rowIndex][colIndex - 1];\n    }\n\n    return adjacencies;\n};\n\nexport const getAdjacentCoordinates = ({\n   mode,\n   colCoordinate,\n   rowCoordinate,\n}) => _.values(getCardinalAdjacencies({\n    mode,\n    colCoordinate,\n    rowCoordinate,\n}));\n\n// get adjacent stones of opposing color\n// get all connected stones in that opposing color group\n// determine if any of those connected stones have any liberties\n// return board state with dead groups removed\n\nexport const removeDeadStones = ({\n    existingStones,\n    mode,\n    newStoneColor,\n    newStoneColCoordinate,\n    newStoneRowCoordinate,\n}) => {\n    const opposingColor = FLAGS.STONE_BLACK === newStoneColor ? FLAGS.STONE_WHITE : FLAGS.STONE_BLACK;\n    const newStones = _.assign({}, existingStones, { [`${newStoneColCoordinate}${newStoneRowCoordinate}`]: newStoneColor });\n\n    // This will be an array that contains the next coordinates to process.\n    // first pass we get opposing stones\n    let nextAdjacentCoordinates = _.filter(getAdjacentCoordinates({\n        mode,\n        colCoordinate: newStoneColCoordinate,\n        rowCoordinate: newStoneRowCoordinate,\n    }), aCoordinate => newStones[aCoordinate] === opposingColor);\n\n    // ...and these stones are considered to be part of an opposing group\n    const opposingStoneGroup = [];\n\n    while (nextAdjacentCoordinates.length !== 0) {\n        opposingStoneGroup.push.apply(opposingStoneGroup, nextAdjacentCoordinates);\n\n        // ... get adjacent allied stones and ones not already part of the group\n        nextAdjacentCoordinates = _.flatMap(nextAdjacentCoordinates, (coordinateToProcess) =>\n            _.filter(getAdjacentCoordinates({\n                    mode,\n                    colCoordinate: coordinateToProcess[0],\n                    rowCoordinate: coordinateToProcess.substring(1),\n                }), aCoordinate => !_.includes(opposingStoneGroup, aCoordinate)\n                && newStones[aCoordinate] === opposingColor)\n        );\n    }\n\n    // Now we check the liberties of each stone in the opposing group\n    const libertiesForGroup = [];\n\n    for (const coordinateToProcess of opposingStoneGroup) {\n        nextAdjacentCoordinates = _.filter(getAdjacentCoordinates({\n            mode,\n            colCoordinate: coordinateToProcess[0],\n            rowCoordinate: coordinateToProcess.substring(1),\n        }), aCoordinate => !_.includes(opposingStoneGroup, aCoordinate)\n        && (!newStones[aCoordinate] || newStones[aCoordinate] === FLAGS.STONE_NONE));\n\n        libertiesForGroup.push.apply(libertiesForGroup, nextAdjacentCoordinates);\n    }\n\n    // return the new board if there are liberties, otherwise the board with the\n    // now dead opposing group omitted\n    return libertiesForGroup.length > 0 ?\n        newStones\n        :\n        _.omit(newStones, opposingStoneGroup);\n};","import * as FLAGS from '../../game/flags';\nimport * as GAME_MATHS from '../../game/maths';\nimport * as ACTIONS from '../constants/actions';\n\n// This maintains a map of coordinates as keys to placed stones.\n// the state is somewhat dynamic but predictable based on the\n// generally agreed upon goban coordinates\nconst initialState = {\n    mode: FLAGS.GAME_9_x_9,\n};\n\nconst board = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_MODE:\n            const { mode } = action.payload;\n\n            return {\n                ...initialState,\n                mode,\n            };\n        case ACTIONS.SET_STONE:\n            const {\n                colCoordinate,\n                rowCoordinate,\n                color,\n            } = action.payload;\n\n            const nextBoardState = GAME_MATHS.removeDeadStones({\n                existingStones: state,\n                mode: state.mode,\n                newStoneColor: color,\n                newStoneColCoordinate: colCoordinate,\n                newStoneRowCoordinate: rowCoordinate,\n            });\n\n            // console.log(`%c Next assumed board state: ${JSON.stringify(nextBoardState)}`, 'background: #222; color: #bada55');\n\n            return {\n                mode: state.mode,\n                ...nextBoardState,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default board;","export const SET_MODE = 'SET_MODE';\nexport const SET_TURN_NUMBER = 'SET_TURN_NUMBER';\nexport const SET_STONE = 'SET_STONE';\nexport const SET_WINDOW_DIMENSIONS = 'SET_WINDOW_DIMENSIONS';\nexport const SET_CONFIGURATION_HEIGHT = 'SET_CONFIGURATION_HEIGHT';","import * as FLAGS from '../../game/flags';\nimport * as ACTIONS from '../constants/actions';\n\nconst initialState = {\n    canRender: false,\n    mode: FLAGS.GAME_9_x_9,\n    turnColor: FLAGS.TURN_BLACK,\n    turnNumber: 1,\n    windowHeight: null,\n    windowWidth: null,\n    configurationHeight: null,\n    blackCaptures: 0,\n    whiteCaptures: 0,\n};\n\nconst game = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.SET_MODE:\n            // Maybe there's an argument for returning a spread operator'd initialState\n            return {\n                ...state,\n                mode: action.payload.mode,\n                turnNumber: 1,\n                blackCaptures: 0,\n                whiteCaptures: 0,\n            };\n        case ACTIONS.SET_STONE:\n            return {\n                ...state,\n                turnColor: state.turnColor === FLAGS.TURN_BLACK ? FLAGS.TURN_WHITE : FLAGS.TURN_BLACK,\n                turnNumber: state.turnNumber + 1,\n            };\n        case ACTIONS.SET_WINDOW_DIMENSIONS:\n            const {\n                windowHeight,\n                windowWidth,\n            } = action.payload;\n\n            return {\n                ...state,\n                canRender: true,\n                windowHeight,\n                windowWidth,\n            };\n        case ACTIONS.SET_CONFIGURATION_HEIGHT:\n            const { configurationHeight } = action.payload;\n\n            return {\n                ...state,\n                configurationHeight,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default game;","import { createSelector } from 'reselect';\nimport * as FLAGS from '../../game/flags';\n\n// This may have been pointless\nconst boardCoordinateSelector = (state, props) => state.board[`${props.colCoordinate}${props.rowCoordinate}`];\n\nexport const placedStoneSelector = createSelector(\n    boardCoordinateSelector,\n    placedStoneAtCoordinate => {\n        if (!placedStoneAtCoordinate) {\n            return FLAGS.STONE_NONE;\n        }\n\n        return placedStoneAtCoordinate;\n    }\n);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as UTILS from './game/maths';\nimport * as FLAGS from './game/flags';\nimport { setStone } from './store/actions/board';\nimport { placedStoneSelector } from './store/selectors/board';\nimport { connect } from 'react-redux';\n\nclass Tile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.showPreviewStone = this.showPreviewStone.bind(this);\n        this.clearCanvas = this.clearCanvas.bind(this);\n        this.drawTile = this.drawTile.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n    }\n\n    componentDidMount() {\n        this.drawTile();\n    }\n\n    componentDidUpdate() {\n        this.drawTile();\n    }\n\n    drawTile() {\n        const {\n            mode,\n            rowCoordinate,\n            colCoordinate,\n            stonePlaced,\n        } = this.props;\n\n        // Render the stone first, that way we can clear appropriately\n        // when the component is updated.\n        if (FLAGS.STONE_NONE === stonePlaced) {\n            this.clearCanvas();\n        } else {\n            this.drawStone();\n        }\n\n        if (UTILS.getCornersConstant(mode).includes(`${colCoordinate}${rowCoordinate}`)) {\n            this.drawCorner();\n        } else if (UTILS.getSidesConstant(mode).includes(`${colCoordinate}${rowCoordinate}`)) {\n            this.drawSide();\n        } else {\n            this.drawIntersection();\n        }\n    }\n\n    drawSide() {\n        const {\n            height,\n            mode,\n            width,\n            rowCoordinate,\n            colCoordinate,\n        } = this.props;\n        \n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        const cardinalDirection = UTILS.getCardinalDirection(mode, `${colCoordinate}${rowCoordinate}`);\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.font = '18px monospace';\n\n        if (FLAGS.WEST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, height);\n            ctx.moveTo(midX, midY);\n            ctx.lineTo(width, midY);\n            ctx.fillText(rowCoordinate, 0, midY);\n        } else if (FLAGS.NORTH === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(width, midY);\n            ctx.moveTo(midX, midY);\n            ctx.lineTo(midX, height);\n            ctx.fillText(colCoordinate, midX, 18);\n        } else if (FLAGS.EAST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, height);\n            ctx.moveTo(0, midY);\n            ctx.lineTo(midX, midY);\n            ctx.fillText(rowCoordinate, width - 20, midY);\n        } else if (FLAGS.SOUTH === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(width, midY);\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, midY);\n            ctx.fillText(colCoordinate, midX, height - 20);\n        }\n\n        ctx.stroke();\n    }\n\n    drawCorner() {\n        const {\n            height,\n            mode,\n            width,\n            rowCoordinate,\n            colCoordinate,\n        } = this.props;        \n        \n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        const cardinalDirection = UTILS.getCardinalDirection(mode, `${colCoordinate}${rowCoordinate}`);\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.font = '18px monospace';\n\n        if (FLAGS.NORTH_EAST === cardinalDirection) {\n            ctx.moveTo(0, midY);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(midX, height);\n            ctx.fillText(colCoordinate, midX, 18);\n            ctx.fillText(rowCoordinate, width - 20, midY);\n        } else if (FLAGS.SOUTH_EAST === cardinalDirection) {\n            ctx.moveTo(midX, 0);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(0, midY);\n            ctx.fillText(colCoordinate, midX, height - 20);\n            ctx.fillText(rowCoordinate, width - 20, midY);\n        } else if (FLAGS.SOUTH_WEST === cardinalDirection) {\n            ctx.moveTo(width, midY);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(midX, 0);\n            ctx.fillText(colCoordinate, midX, height - 20);\n            ctx.fillText(rowCoordinate, 0, midY);\n        } else if (FLAGS.NORTH_WEST === cardinalDirection) {\n            ctx.moveTo(midX, height);\n            ctx.lineTo(midX, midY);\n            ctx.lineTo(width, midY);\n            ctx.fillText(colCoordinate, midX, 18);\n            ctx.fillText(rowCoordinate, 0, midY);\n        }\n\n        ctx.stroke();        \n    }\n    \n    drawIntersection() {\n        const {\n            height,\n            width,\n        } = this.props;        \n        \n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, midY);\n        ctx.lineTo(width, midY);\n        ctx.moveTo(midX, 0);\n        ctx.lineTo(midX, height);\n        ctx.stroke();\n    }\n\n    drawStone() {\n        const { stonePlaced } = this.props;\n\n        this.drawStoneInternal(FLAGS.STONE_BLACK === stonePlaced);\n    }\n\n    drawStoneInternal(isBlack) {\n        const {\n            height,\n            stoneRadius,\n            width,\n        } = this.props;\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        const midX = width / 2;\n        const midY = height / 2;\n\n        ctx.beginPath();\n        ctx.arc(midX, midY, stoneRadius, 0, 2 * Math.PI);\n\n        if (isBlack) {\n            ctx.fillStyle = '#000000';\n            ctx.fill();\n        }\n\n        ctx.stroke();\n    }\n\n    showPreviewStone() {\n        const { turnColor } = this.props;\n\n        this.drawStoneInternal(FLAGS.TURN_BLACK === turnColor);\n    }\n\n    clearCanvas() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    onMouseOver() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.showPreviewStone();\n        }\n    }\n\n    onMouseOut() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.clearCanvas();\n            this.drawTile();\n        }\n    }\n\n    onClick() {\n        if (FLAGS.STONE_NONE === this.props.stonePlaced) {\n            this.props.setStone();\n        }\n    }\n\n    render() {\n        const {\n            height,\n            width,\n        } = this.props;\n\n        return (\n            <canvas\n                height={height}\n                width={width}\n                ref=\"canvas\"\n                onMouseOver={this.onMouseOver}\n                onMouseOut={this.onMouseOut}\n                onClick={this.onClick}\n            />\n        );\n    }\n}\n\nTile.propTypes = {\n    rowCoordinate: PropTypes.string.isRequired,\n    colCoordinate: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    stoneRadius: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    mode: PropTypes.string.isRequired,\n    stonePlaced: PropTypes.string.isRequired,\n    turnColor: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stonePlaced: placedStoneSelector(state, ownProps),\n        turnColor: state.game.turnColor,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const {\n        colCoordinate,\n        rowCoordinate,\n    } = ownProps;\n\n    return {\n        setStone: () => {\n            dispatch(setStone(colCoordinate, rowCoordinate));\n        },\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Tile);","import * as TYPES from '../constants/actions';\nimport * as FLAGS from '../../game/flags';\n\nconst setStoneInternal = (colCoordinate, rowCoordinate, color) => ({\n    type: TYPES.SET_STONE,\n    payload: {\n        colCoordinate,\n        rowCoordinate,\n        color,\n    },\n});\n\nexport const setStone = (colCoordinate, rowCoordinate) => {\n    return (dispatch, getState) => {\n        const { turnColor } = getState().game;\n        const color = FLAGS.TURN_BLACK === turnColor ? FLAGS.STONE_BLACK : FLAGS.STONE_WHITE;\n\n        dispatch(setStoneInternal(colCoordinate, rowCoordinate, color));\n    };\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash';\nimport * as FLAGS from './game/flags';\nimport * as GAME_MATHS from './game/maths';\nimport Tile from './Tile';\n\nclass Board extends Component {\n    getCoordinates() {\n        const { mode } = this.props;\n\n        // Yay hardcoding\n        if (mode === FLAGS.GAME_9_x_9) {\n            return FLAGS.GRID_COORDINATES_9_x_9;\n        } else if (mode === FLAGS.GAME_13_x_13) {\n            return FLAGS.GRID_COORDINATES_13_x_13;\n        } else if (mode === FLAGS.GAME_19_x_19) {\n            return FLAGS.GRID_COORDINATES_19_x_19;\n        } else {\n            throw new Error('No known mode selected');\n        }\n    }\n\n    renderRow(aRow) {\n        const {\n            mode,\n            stoneRadius,\n            tileDimensions,\n        } = this.props;\n\n        const numberCoordinate = aRow[0].substring(1);\n\n        return <div\n            key={`${mode}${numberCoordinate}`}\n            className=\"flex-container\"\n        >\n            {_.map(aRow, aCoordinate => {\n                const letterCoordinate = aCoordinate[0];\n\n                return <Tile\n                    key={`${mode}${letterCoordinate}${numberCoordinate}`}\n                    colCoordinate={letterCoordinate}\n                    rowCoordinate={numberCoordinate}\n                    height={tileDimensions.height}\n                    stoneRadius={stoneRadius}\n                    width={tileDimensions.width}\n                    mode={mode}\n                />;\n            })}\n        </div>;\n    }\n\n    // I may have reversed this? https://senseis.xmp.net/?Coordinates\n    render() {\n        const coordinates = this.getCoordinates();\n\n        return (\n            <div id=\"board\">\n                {_.map(coordinates, aRow => {\n                    return this.renderRow(aRow);\n                })}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        mode,\n        windowHeight,\n        windowWidth,\n        configurationHeight\n    } = state.game;\n\n    const boardDimensions =\n        GAME_MATHS.calculateBoardDimensions({\n            configurationHeight,\n            windowHeight,\n            windowWidth,\n        });\n\n    const tileDimensions =\n        GAME_MATHS.calculateTileDimensions({\n            mode,\n            boardHeight: boardDimensions.height,\n            boardWidth: boardDimensions.width,\n        });\n\n    const stoneRadius = GAME_MATHS.stoneRadius(tileDimensions.height);\n\n    console.log(`Configuration height: ${configurationHeight}, Window width: ${windowWidth}, window height: ${windowHeight}, calculated tile dims: ${JSON.stringify(tileDimensions)}`);\n\n    return {\n        mode,\n        stoneRadius,\n        tileDimensions,\n    };\n};\n\nexport default connect(mapStateToProps)(Board);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as FLAGS from './game/flags';\nimport {\n    setConfigurationHeight,\n    setMode,\n} from './store/actions/game';\n\nclass Configuration extends Component {\n    componentDidMount() {\n        const {\n            configurationHeight,\n            setConfigurationHeight,\n        } = this.props;\n\n        if (!configurationHeight) {\n            const height = document.getElementById('configuration').clientHeight;\n            setConfigurationHeight(height);\n        }\n    }\n\n    getHumanReadableMode() {\n        const { mode } = this.props;\n\n        if (mode === FLAGS.GAME_9_x_9) {\n            return '9 x 9';\n        } else if (mode === FLAGS.GAME_13_x_13) {\n            return '13 x 13';\n        } else if (mode === FLAGS.GAME_19_x_19) {\n            return '19 x 19';\n        } else {\n            throw new Error('No known mode selected');\n        }\n    }\n\n    render() {\n        const {\n            mode,\n            setMode,\n        } = this.props;\n\n        return (\n            <div id=\"configuration\">\n                <h1>Go Demo Board</h1>\n                <div className=\"flex-container\">\n                    <div>\n                        <h4>Mode: {this.getHumanReadableMode()}</h4>\n                        <h4>Turn Number: {this.props.turnNumber}</h4>\n                    </div>\n                    <form>\n                        <select\n                            onChange={e => setMode(e.target.value)}\n                            value={mode}\n                        >\n                            <option value={FLAGS.GAME_9_x_9}>9 x 9</option>\n                            <option value={FLAGS.GAME_13_x_13}>13 x 13</option>\n                            <option value={FLAGS.GAME_19_x_19}>19 x 19</option>\n                        </select>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        mode: state.game.mode,\n        turnNumber: state.game.turnNumber,\n        configurationHeight: state.game.configurationHeight,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setMode: (mode) => {\n        dispatch(setMode(mode))\n    },\n    setConfigurationHeight: (height) => {\n        dispatch(setConfigurationHeight(height))\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Configuration);","import * as TYPES from '../constants/actions';\n\nexport const setMode = mode => ({\n    type: TYPES.SET_MODE,\n    payload: {\n        mode,\n    },\n});\n\nexport const setTurnNumber = turnNumber => ({\n    type: TYPES.SET_TURN_NUMBER,\n    payload: {\n        turnNumber,\n    },\n});\n\nexport const setWindowDimensions = (windowWidth, windowHeight) => ({\n    type: TYPES.SET_WINDOW_DIMENSIONS,\n    payload: {\n        windowWidth,\n        windowHeight,\n    },\n});\n\nexport const setConfigurationHeight = configurationHeight => ({\n    type: TYPES.SET_CONFIGURATION_HEIGHT,\n    payload: {\n        configurationHeight,\n    },\n});","import React, { Component } from 'react';\nimport Board from './Board';\nimport Configuration from './Configuration';\nimport { connect } from 'react-redux';\nimport { setWindowDimensions } from './store/actions/game';\nimport './styles/index.css';\n\nclass App extends Component {\n    // Always seems like garbage when .bind() is used\n    constructor(props) {\n        super(props);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.props.setWindowDimensions(window.innerWidth, window.innerHeight);\n    }\n\n    render() {\n        const { canRender } = this.props;\n\n        return (\n            <div className=\"App\">\n                <Configuration/>\n                {canRender && <Board/>}\n                {!canRender && <h1>Please wait...</h1>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        canRender,\n        mode,\n    } = state.game;\n\n    return {\n        mode,\n        canRender,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setWindowDimensions: (windowWidth, windowHeight) => {\n        dispatch(setWindowDimensions(windowWidth, windowHeight))\n    },\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux boilerplate\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore'\n\n// More potentially specific imports to this domain\nimport App from './App';\n\n\nconst store = configureStore();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport loggerMiddleware from './middleware/logger';\nimport boardReducer from './reducers/board';\nimport gameReducer from './reducers/game';\n\nexport default function configureStore(preloadedState) {\n    const middlewareEnhancer = applyMiddleware(thunkMiddleware, loggerMiddleware);\n\n    const enhancers = [middlewareEnhancer];\n    const composedEnhancers = composeWithDevTools(...enhancers);\n\n    const rootReducer = combineReducers({\n        board: boardReducer,\n        game: gameReducer,\n    });\n\n    return createStore(rootReducer, preloadedState, composedEnhancers);\n}"],"sourceRoot":""}